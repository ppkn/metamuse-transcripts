Speaker 1 (00:00):
One of the things that's really important, whether you're talking about product principles or company values is you have to be able to negate them because otherwise you don't use them to resolve conflict. 

Speaker 2 (00:14):
Hello and welcome to Mehta. Muse. Use the software for your iPad that helps you with ideation and problem solving this podcast. Isn't about music product. It's about music company and the small team behind I'm here today with my colleague, mark Brannigan, Adam, and my former colleague. Now friend max, joning max. Great to have you here. So max has a impressive career in the tech world, both as an indie developer making cloud app years back, the three of us worked together at Heroku, and now you're leading the design team at GitHub. More importantly for our purposes. Uh, you are a early user, you were a very first customer from use and you're also an advisor. So we get to bombard you with our half finished ideas once a month. And you can tell them why, tell us why there 

Speaker 1 (00:59):
Thank you for that very generous introduction. Uh, and it's, it's quite the privilege to be a part of the muse creation process. Even if it's on the sidelines. Now I understand 

Speaker 2 (01:07):
You just got back from a camping trip. That sounds, 

Speaker 1 (01:10):
Uh, yeah, I spent the last week completely off the grid. My wife and I with the dog went and drove up to the Tahoe national forest in a four by four sprinter van and did nothing but hike and, uh, sort of be in nature, which at this moment in time feels, or is an immense privilege. Right. But it was good to disconnect a little. 

Speaker 2 (01:35):
Now our topic today is principled products. Now this was your idea maximum, if you can explain what the salt. 

Speaker 1 (01:41):
Yeah, I think it might be interesting too, to start at the beginning of how I was introduced to muse. Cause I think we had talked, we, we share lots of interests, uh, sort of end user programming, end user computing, and also sort of tools for thought and making tools for people who make stuff. And so naturally when you started, as you shared it with me and I think my first, I don't quite remember, so please, please correct me here. Adam of my, I think my first reaction was okay, well, why would I use this? This is not letting me draw the way that I want to draw. 

Speaker 2 (02:12):
I remember giving you a quick, uh, just in-person demo if you're visiting your mom here in Berlin and he stopped by my place. I said, Hey, I'm working on this new thing and just showed you a pretty early version. And you, I think you'd liked you had a positive reaction to the zooming kind of spatial interface, but then when you went off to try it on your own a little bit, you said, well, yeah, the inks kind of ugly and I have a better sketchbook habit that you're using Notability at the time and yeah, for purely for sketching, that's true today as well. I would abilities better. 

Speaker 1 (02:38):
I think I narrowed in, on the, on the ink engine very quickly versus acknowledging the principles that muse Guinness stands for. And I think that's what triggered this entire thought process in me of to actually consider, to make muse work for you. You have to consider the principles that the creator is in this case, the two of you and the rest of the team sort of put into product. And that's where I think the train of thought of, okay, what are principled products sort of came from? As I tried to define what our principal, what we mean by principled, I kind of came to the, to the realization of it's just a set of rules or laws that guide the behavior of the people who make the thing. But then there is even a secondary layer, which I think is much more interesting, which is a set of rules or laws that guide the behavior of the people using the thing. And I think muse is you framed it mark or Adam. I don't remember, but as a tool for thought and a tool for rumination, the moment that you gave me, this is obviously not a very scalable process, but you gave me this onboarding onto the muse philosophy after I initially rejected the app. And then it clicked 

Speaker 2 (03:47):
To hear, now we just need to figure out how to kind of replicate and scale up that process, I guess, but in the near term, happy to do the one-off a one-off onboardings, I guess. Now I'd be curious to hear from, from both of you, both of you guys, what are other principal products? And I assume that many, many products are driven by a mission or they have a purpose or a uniting set of values. But I assume that when we, when we say, when we really say principal products in the way you just described max, that's, that's not many or even that's not most, or even maybe many products that are out there. So what are, what are some examples? I don't know, mark, do you have any that come to mind? 

Speaker 3 (04:20):
One that comes to mind for me is SQL Lite. This is a classic database that has this principle of being super reliable and running everywhere. Actually, the homepage is hilarious. It looks like it's from the nineties and it says SQL Lite. It does not give problems. It just works. I think importantly, it's a trade-off that they're making, for example, it makes it a harder and slower and more laborious to develop the product. But that's a principle that they're really committed to and that you can expect from them as developers and you can expect as users. 

Speaker 2 (04:48):
And I think we, um, pointed out and maybe it was the, the local first article that SQL Lite is now listed by the us library of Congress as an accepted archival format alongside other formats, like PDF or PNG being this very long-term hasn't changed much. The developers are really committed and show that they're committed through the already. I don't know what it is, decades of maintenance that they've put into 

Speaker 1 (05:13):
It. I think if you think about products that apply principles very thoroughly, you kind of have to distinguish between the products that are just very thorough at applying the principles that the team sort of believes in. And I think one example is the original iPhone. Like it's very clear when you use the original iPhone, you kind of feel almost what the team behind, uh, the iPhone stood for, like what they believed in and what they wouldn't sacrifice and like what their principles stack is. And that grade's a very distilled experience. And it's also a great sort of, um, tool for wrangling complexity. Like if you smash the iPhone home button, enough times, you will return to safety. And then like, that's just, it's a very, very cool, but I'm actually more interested in products or I think we have that covered, like you touched on, on this in, in your, uh, I'll plug your own show, but, uh, you touched on it in the, in the manual, um, episode for the muse podcast where iOS development, mobile development in general has created this structure of, okay, let's just make the product as simple as possible. 

Speaker 1 (06:20):
Let's just make them as intuitive as possible. They shouldn't even require a manual. Why are you shipping a manual with a product like the iPhone comes with three pages? And I think adhering to principles is necessary to deliver those kinds of experiences for very approachable, very simple products, but it's also necessary if you want to deliver products with any kind of like, I think you said any kind of depth. And so I'm more interested in principles or products where they're almost actively confusing or like they seem like they're poorly designed on the surface unless you read the manual, unless you read the philosophy of the creators. And so I think they're an example is clearly VIM, right? If you use them for the first time, you're like, how does this even make sense if you've never heard of the principles, right. If you want to use the mouse to use VIM, you're going to have a really hard time. 

Speaker 1 (07:11):
And in comparison, sort of to pick in the same domain, Microsoft word is very much a product that tries to adapt to users needs and offers flexibility, but in a sense of go use it however you want it it'll do that for you. And VIM says, no, no, no, it's very composable, but you going to have to buy into our methodology. And I think the latter is sort of really interesting muse fits into that category. I would say that we all have a shared background here with, with Heroku and the 12 factor app. I think that falls into the same category as in, if you're going to consistently want to write to the file system on Heroku with these ephemeral dynamos, you're going to, it's not possible, right? And so if you don't change your mind, you will have a miserable experience using this product. And so I'm wondering if there's other products that come to mind for the two of you that sort of very much like if you don't buy into it, it just feels like the people didn't know what they were doing, designing the product, versus if you read the manual something clicks and then you're like, ah, I get 

Speaker 3 (08:12):
It. I think get, might be in this category for me. So get if you approach it and you just look at the porcelain, that is the commands that you do to you use to do common stuff. It's really confusing. So if I want to send you a change to my code, it's like check out a branch and then stage your commit and then push it to remote over it. Like what, but if you take a step back and see that get is a system for tracking content, immutable content over time, everything makes perfect sense in light of that. And so you have to have that underlying knowledge and model of it, this bag of code. And without it, it's just very confusing 

Speaker 2 (08:43):
Talking about the, uh, the Heroku example, of course, there's sort of what, what came first, the principles or the product, you know, I think it's, it is a chicken and egg thing they developed together. And I notably there are 12 factor app. We wrote well into the existence of the product. It had existed for four plus years. And so we, we sort of discovered these patterns and these things that made application development easier, particularly in the context of continuous deployment and agile development and all that sort of stuff. Eventually we wrote them into this manifesto to make it easier to comprehend the product, the product already existed and already had these principles that we had over time. So I wonder for other products, maybe that some of us have worked on, I know max, you talked about GitHub actions. No, that was when you, you drove, um, early in your year run of GitHub and, and you mentioned that that kind of was also driven by those same, uh, set of core principles, uh, like that kind of these building blocks. But did that start in that example or other others you've worked on, did you start with a list of products that are enumerated and written down that the team can understand and build against? Or do you only realize the products afterwards that they sort of emerge from the crafting of the product itself? 

Speaker 1 (09:57):
I think in the, in the case of get, have actions it's worth pointing out that the get hub was a 12 or a definitely a, a decade old company, I think 12 years. And so it already had ingrained principles in what it believed in. So I think in that case, you have the luxury of sort of building on top of them. What we did with GitHub actions is actually at the root of what GitHub believes in, right? Like get hub is about multiplayer software development. It's about saying, okay, how can I reuse and remix the work of others? How can I stand on the shoulders of giants? Basically, that's sort of the whole ethos of open source as well. And so when we looked at you have actions and workflows for software automation, CIA CD, and so on, we realized that for the most part, that principle is largely lacking, right? 

Speaker 1 (10:41):
Like nobody is actually saying, instead of having one monolithic pipeline, that to know that the team that's building the app build from scratch with some bash scripts, there are very few reusable components. And so from day one, we decided, okay, that's how this has to be part of the ethos or the principles that we applied to, to design this. But then I think only it, it really only turns into a true principle once you've proven it almost in the market or when you're like, okay, this is just not just a hypothesis. This is truly a guiding principle where if we continue to double down on this, then good things will happen. Otherwise you kind of have to reevaluate and say, well, are we wrong about this? And so I think the conviction and the principle grew stronger as we went along, but it didn't start from day one. 

Speaker 2 (11:26):
Yeah. The idea that principles are something that don't just come out of the ivory tower, the stone tablets from on high or whatever metaphor you wanna use, but are something an idea you have a hunch you have, but then they need to be validated just like any other part of building a thing that, that really resonates strongly with me right now, because that's a lot of the process we have been going through with muse. For example, the mode lessness was a pretty core principle early on that you want to make this fast tool and you have all the screen space given over to, um, you know, no Chrome is all your screen space has given over to your content that you want to move really fast, like a powerful tool in the desktop. Uh, then that implies that you, uh, shouldn't have a bunch of toolbars and stuff, but in fact, you should have these gestures and things. 

Speaker 2 (12:12):
And early versions of the product had that. Let's say a version of that principle, but often the implementation of it, which involved holding the stylists in undiscoverable ways and other things like that. Uh, we, we found just didn't validate with users. We couldn't, people didn't get it. It didn't strike a chord. And then we, we had to adapt that over time. And I guess that core principle of mode lessness, or the core principle of trying to leave all the screen space for the users content, uh, we, we did ultimately, as you say, build conviction in that over time, but the implementation of how we actually achieve that changed a lot. 

Speaker 3 (12:47):
And now I'm realizing that a lot of the most interesting principal products, the principles aren't these opinions that come from nowhere, they're actually understandings about reality that you've kind of uniquely grasped. So in the case of GitHub, is this idea that basically all software is developed by multiple people. Yet our tools initially were very single node based and it took about a sort of similar story. Um, likewise with get is this idea that code is a, is a set of content that changes over time and everything kind of follows from that. Um, so as I think about these principles that we have in muse, they often come back to these fundamental understandings about the human body, the human mind to how, how the creative process actually works. And a lot of stuff flows from that. 

Speaker 1 (13:24):
Probably also not a coincidence that you already have fairly strongly formed principles with a, I don't know how long you, you sort of think of muse as existing, but the work that you did at and switch was this cultivation of these principles and the things that you believe in. And like, that was a very, very largely like research driven. And I think now with news, you're sort of putting those to the test, but that still means that they're much stronger than, I don't know if you, if you look at obviously the next door neighbor to principals as something like company values, one of the things that's really frustrating when looking at company values is you could actually kind of just take all the startups in Silicon valley and overlay their company values. And I think there would be so much overlap that they lack sort of, they're almost meaningless, right? Like everybody says, Hey customers, first or empathy with the customer or build in delight. One of the things that's really important, whether you're talking about product principles or company values is you have to be able to negate them because otherwise you don't use them to resolve conflict. 

Speaker 3 (14:22):
Exactly. And another way to look at that is principle should be of the form given to plausibly good choices. This principle says we choose a instead of B where B would also have been a potentially reasonable choice, but it's not our principle to do so. 

Speaker 1 (14:35):
The, I don't know if you remember, I went when Trello Trello launched this feature called card aging awhile back, and you could even like switch it to a pirate, uh, sort of, uh, scrolls and the idea behind it is that if you didn't update a card on your board for a period of time, it would sort of fade into the background. And I actually believe that the principles for your products should have a similar aging mechanism, which is, uh, let let's just assume that you have an internal tool that lists out all your company principles and values or product values. If people don't reference the uniquely attributable like URLs for each of these things, often enough, they just start fading into the background. And then only the most in the ones that actually truly help you make decisions, right? Like you said, picking between two very plausible solutions, pick a instead of B because of this principle, that's how they stay alive, right? Like they have to have a shelf life by default. How important 

Speaker 2 (15:32):
Is it? Do you think to write what I'll call an explainer? So the 12 factor was an explainer for a lot of the Heroku philosophies. There's something like the Zen of Palm has a great design document developer guide for the original Palm pilot that enumerates a lot of their principles. But many of these other cases we've listed maybe don't necessarily have that written down or at least not in a public forum. And you can glean it a little bit from their marketing material and their website, or from following them on Twitter or just from using the product. Is that important or is it more of a nice to 

Speaker 1 (16:03):
Have depends on the product? So for example, I don't think that the iPhone design principles are sort of coherently written down somewhere, at least not in the way that the first 20 people who were part in shaping this extraordinary product, but it shines through the product, right? So that's, it's a, it's a place where you, you know, that there is an amount of finite amount of principles that this team has applied and it sort of distilled and crystallized into the product that is the iPhone for the products that are actively confusing. If you don't understand the principles though, which is usually, I think it's product with a lot more depth and complexity, you kind of have to write it down because otherwise you never get to the adoption, right? Like you never get to the, the sort of enough critical mass to say, I have figured out how to translate the principles and values that the team making the product believes in so that it can be absorbed by thousands, hundreds of thousands of people in a very sort of scalable way, right? Like that's presumably I would assume that's why you're investing so much energy into that, the manual and the documentation and the videos that you're recording full for muse is because you want to take the ideas that you've spent years now developing and crystallizing them in a way that now people can just onboard and benefit from that. It's, it's not unlike a syllabus for any given subject in a college or when you're studying of, okay, I've learned this thing and now I'm compressing the timeline so that you can learn it twice a day. 

Speaker 3 (17:29):
This reminds me of the comic book that they wrote to introduce Google Chrome. Uh, yeah. Um, and this was, uh, in the classic comic format and it was explained that it was this new browser that was meant to be fast and secure. And it was motivating that I think that's also an example of how these explainers, they don't need to reach out to all of the potential users. It could be just that you're empowering the power users, the evangelist, the early adopters versus trying to make manual that everyone's going to read because as we all know, that's quite an uphill battle, 

Speaker 2 (17:57):
Notably on the Google KRS-One comic, I happen to be on the artist's website that made that, uh, recently they specified that it was originally intended only for journalists. They were going to give it out as kind of a cool press release thing. And they only made printed copies to give out to them in this format, like you had to come to the press briefing or something like that. And then for whatever reason, this, uh, got so much attention, they ended up eventually taking the digital and spreading it more widely, but it was precisely that purpose was to create excitement and enthusiasm among tech journalists who were going to go spread the word and help them understand it well enough that they could write about it in their own voice. And maybe some amount of shared vocabulary giving some naming too. I don't know, maybe the sandboxing on the tabs and trying to, you know, something that was very deep technical topic, but surfacing why they, this deep technical work, what the user-facing benefits were and how you could talk about that and how you could see that. 

Speaker 1 (18:52):
That was, I think the, the thing that comes to mind, especially right now, when we're thinking about this, as sort of, you said evangelists and the super users, and you can have the cynical view of saying, oh, the influencers, right? Like Instagram influencers for sort of just, you know, so into your product, they're going to end eventually they, it becomes part of their identity. But I think there is actually some truth to all of the products that we are listing today, um, tend to create super fans very quickly and they tend to create it in a way where the super fans themselves understand a significant majority of the principles. And then they go out into the world and they share those principles because they have adopted them and they've changed their perspective, their view of the world. I think that is actually a really important part of these principles, which goes back to writing them down or preserving them somehow is really important. If we listed out more of them, this is probably going to be a constant of, there are always people who believe almost irrationally in these principles and carry them forward. Run. Great example would be the entire GTD app market GTD 

Speaker 2 (20:00):
Is get David Allen's getting things done. 

Speaker 1 (20:02):
Yeah. Yes. With GTD originally shipped as a product in the sense of it was a book and you can consider that a manual. And then the product was just so trivial because it was a bunch of Manila folders and index 

Speaker 2 (20:15):
Cards. He advocated you carry index cards around in your pocket to write down ideas that you had throughout 

Speaker 1 (20:20):
The day. And by now I think those index cards are well. Some people still really love index cards and they're still a good medium. But if you look at most of the GTD conversations, they have evolved from that product, the principles still stand for people. And then now if you use those GTD design product, I'm thinking like things, um, OmniFocus if you don't know what GTD stands for at some point, those, those topics or the, the, the, the concepts that they've introduced the application seem kind of awkward. It's like, why am I doing this? Why am I not just making a list of to-do? Is that is very straightforward. Why are you telling me to annotate this with projects and contexts and all this stuff that GTD goes into? And so if you're not familiar with it, then it seems like awkward product design choices, or unpenetrable sort of product design choices, but once you actually use them, and if the system works for you, if you, if you share the same principles, it's almost like it's giving you super powers. 

Speaker 2 (21:15):
You're talking about subscribing to a particular methodology about how you organize your information life in order to find value in one of these to-do lists tasks, keeper type products. But I guess we're saying on one hand, we think it's a good thing that you adopt cloud native or a particular perspective to use something like get them or the iPhone or OmniFocus. But on the other hand, there's the rigid. I think we all really like composable make it your own products have a lot of flexibility, small, sharp tools. It can be combined in different ways and adapted to different uses and scenarios and different people's needs. So it's interesting to think about that tension, or I'd be curious to hear how you go think about the tension of on one hand opinionated principled, if you use it, and if you subscribe to a particular methodology or particular way of approaching your work, or, um, then this product will be a good fit for you in otherwise awkward, but then there's also, I've definitely used, I dunno, like project management tools that prescribe a very specific process. And if you do that exact process, it's great. But if you don't, it's really uncomfortable. And I ended up not using those because of their rigidity. Yeah. How, how has that resolved? I 

Speaker 3 (22:25):
Come back to this idea that the principles need to be true. So if you can have very specific ideas about how a product should work and how the workflow should be, but that doesn't reflect the reality of what I'm trying to do. Of course, I'm not going to like it. And I flip side, if you're suggesting a structure that exactly reflects how the world works then great. And everything fits into. 

Speaker 1 (22:43):
So was this episode on the exponent podcast, uh, from the strategic Erie Ben Thompson, where they talk about principles, stacks, and in particular, they point out that yes, you can make a list of principles that you believe in, but they have to kind of come in a certain order because at some 0.2 principles will kind of be at odds with one another, no matter what, right? Like, and in order to resolve the conflict between the two, you're going to have to pick one that you believe in more strongly than the other. And I think with designing products that you have that same dynamic. And I believe that the establishing the order of principles is a little bit like sediment over time. The ones that you have applied more frequently in designing products, sort of go to the bottom and end up being the really solid foundation versus the ones that you are still experimenting with. 

Speaker 1 (23:31):
There are still floating, uh, at the top. And like, you're not fully committed. And you're like, okay, let's try this a couple more times. And then once you get to more conviction, then they sort of get compressed further down and you start believing them, uh, in the more, um, you mentioned an interesting one because you, you said, okay, do you want to be opinionated, opinionated products? Like a lot of times, you know, we say good design is opinionated. At the same time, the three of us are very much frustrated with the inflexibility of modern software and the fact that it's not composable. And we believe in the Unix philosophy of saying you have tools that work really well together, but they're special purpose. So we also want, like, we want opinionated, but flexible, or maybe flexible is the wrong word, opinionated, but composable. And we have two principles that in theory will come and in conflict with one another, as you're developing something. And I think there, this, this is where the principals that comes in and say, okay, which one is more important? 

Speaker 3 (24:24):
Potential resolution of that in the case of Unix is the underlying principle is everything is a tech stream. So in so far as you do that, you can have these different tools that might have different opinions, but they can be composed and recombined in text editing. Now, the other thing I would say there is everything is a text stream is like only sort of right. There are things that are obviously not texts, and that's where you next starts to break down. I that's an example of how the principles are only as good as they are reflection of reality 

Speaker 2 (24:47):
Mean maybe that's notable because reality is something that changes as technology and society evolve. So Unix was absolutely the core of all of my computing workflows for pretty long time and included, not just server and development work, but things like recording a note or a personal to-do. I had command line tools for all that stuff. And then as the phone became a bigger and bigger part of my computing life and the command line interface just doesn't have the same utility there. And then increasingly that approach that Unix put to such good work, and it's still amazing for, you know, servers. And, but when it comes to my daily computing basically is much less central. And that's because my reality has changed. I think most of the products we've talked about so far, a Unix, Roku, GitHub actions, Palm pilot, the iPhone with its single purpose or multipurpose home button. 

Speaker 2 (25:46):
These all feel like the, the principles we're talking about are things that are, let's say how the product works, but I wonder do we, another kind of list of examples I made when I was thinking about this is products that are more, maybe it's more tied to the mission or the kind of world that they want to see exist. So there, for example, overcast comes to mind player that I use, and a lot of the principles come more through listening to Marco Armand. Who's the kind of solo indie developer and he blogs and has his own podcasts and stuff. But he's always talking about a free and open podcast publishing world where instead of having the massive aggregation like you have with other platforms like YouTube and video, for example, that podcasts are these RSS feeds that anyone can publish and there's no central arbitrator and so on. 

Speaker 2 (26:32):
And that obviously ties very well to his business interests, but it's, they, they go hand in hand, maybe he's making the podcast player that fits with a world that has free and open podcast based on the RSS standard. If that world exists, his product does well. And I also think of like all these pre increasing number of privacy oriented tools, like the brave web browser, which mark caught me using a little while back on my desktop or messaging apps, like signal and telegram, or we use a fathom analytics on the amuse website, which is a privacy oriented kind of alternative to Google analytics are, do we count those kinds of things in this principled product category? Or is that more sound more like a mission? 

Speaker 1 (27:14):
You have to count them as part of these principles because it's all the users of those products are making trade-offs because they believe in the mission, right? Like, so for example, in the, in the case of overcast, you are explicitly saying, I believe in the open podcast environment enough that I'm willing to maybe sacrifice some features that other podcast players like Spotify and so on can build because of the aggregation, like commenting systems rating, and so on. Sure. You could kind of build those in a distributed fashion as well, but it just tends to not happen. So as a user, I happen to use it overcast as well. Cause I believe in this, I am making the trade-off of saying it is more important to me that we preserve the openness of the ecosystem than getting some other feature like bells and whistles. Imagine if you, if you used signal signal is probably in many ways harder to get people to adopt it than Facebook messenger, because Facebook messenger is ubiquitous, right? And so, uh, you, without the security implications or without the privacy implications of signal, if you don't know about them, why would you make that choice? 

Speaker 2 (28:22):
I could see something similar for a lot of these open orientation communities. Lennox. I was a pretty heavy Linux on the desktop user for a number of years. Uh, there's things around people who build their own PCs or maker, uh, maker, communities, things like 3d printing and so on. And in many cases they are accepting worse user experiences. I don't know, Lennox famously trying to get your laptop to wake from sleep reliably or connect to the wifi is just always this struggle. But if you really believe in the openness and you don't like the walled garden and you want the freedom and flexibility and the hackability, that's a, that's a very, that is a trade-off you're willing to make 

Speaker 1 (29:00):
The Joko is next year is Linux on the desktop. And for sure, or the products like Linux less approachable by default for, for people maybe then like iOS or Android or whatever. And so people who build like, again, they make trade-offs and say, okay, my wifi will not work reliably, or my trackpad will not work as reliably as I would like it to, but at the same time, I'm getting this other benefit. And then we get into these, it's almost very public. Like, I guess he used to call them flame wars, but like there's these public debates that are just deeply rooted in principles. And like, to me, I think the actual thing that matters is that you, if you zoom out, there is enough application of different principles of makers around in the world that are creating things so that you can find the tool that you believe fits your principles, stack as close as possible. 

Speaker 1 (29:53):
And of course there's a, you can divide any distance, you know, enough times and eventually something will not fit with your principal, but broad enough, you're like, okay, I believe in 90% of this. Right. And I think that's where the, the one underlying principle, I think that we're arguing for here implicitly is if we believe that software needs to be principled and needs to show the principles on the front layer, like sort of like talk about them almost in a virtuous way, then we need enough variety in software so that, uh, people can sort of find the principle stack that they buy into. Versus if you only have one choice, then you're, then you were kind of either as a, as a maker, as a creator, you are forced to build a thing that is just a khaki pants. Like it's just that, that, that, like, nobody's going to get angry about anything, any choices that you've made. And I think that just makes an inferior solution and experience for each person individually. And so I think variety is one of the guiding principles here. I think that you need to apply. Uh, and that's why I sort of encouraging people to make things and to be creative is almost the base principle that sort of underlies everything. If you don't have that, then the entire notion of principled products just doesn't work. 

Speaker 2 (31:07):
Yeah. Let a thousand flowers bloom, and people can find their, find their tribe or find what they gravitate to find what re reflects what they stand for, colluding, how the product works today, but probably also how you want the world to be. So in the, in the overcast example, you're using that partially because you want free and open podcasts when you use, when you use telegram, you're using that because you want messaging between individuals to be fully private, not Superbowl by government entities or anyone else. I think there's very much similar thing with muse. And certainly the people I think that are buying the product and these early days when we're still in the process of building up the features, part of what they're saying without those dollars is I want things like this to exist. I want computing to be more like this. And I know when, when mark and I came into it, for example, one of Mark's say access to grind is just software being too slow all the time, waiting on them, spinners things to open. 

Speaker 2 (32:02):
And we just really are incredibly tight about that on the team. We want everything to be instantaneous all the time and a huge amount of engineering effort and design effort to a lesser degree goes into making that happen. But that's just, we believe that's possible with computers, the incredible computing hardware that we have at our disposal today. And we feel sad that we spent so much human spend so much time waiting on computers even today. And so that's something we're really willing to stand up for and fight for and invest in. And people who choose muse, particularly if they choose to support it financially are saying, I want software to be more like this, not just this thing, but I want software like this to exist in the world. 

Speaker 1 (32:44):
In the context of muse, it might be a good idea to also explicitly point out that in applying the principles that you all stand for, the kind of software that you want to make, and even further the kind of business that you're building, you're explicitly saying we are cutting out a huge user base because we are not going for the top of the funnel, like most amount of people onboarded. And then let, let's make sure that everybody draws, at least once you're basically saying that this is a professional tool, we're charging money for it. And we want this to only be a tool that people who actually derive the exact amount of value out of it as you charge for it, right? Like, oh, obviously this is a incrementally correct approach to finding out what that dollar value is. Um, and I think you believe that software should really drive the creativity of that. 

Speaker 1 (33:35):
I shouldn't put words in your mouth, but like from the conversation that we've had that creativity of the individual, right? So you're making trade-offs and saying other things will happen either at a later point or for now we're doing pates offer for professional people who want to do deep work. And that sort of cuts out like most of the pie in some degree, but at least the pie, the, the thing that pres is, is left, like the people who are now diehard fans, and you can sort of call it, call me a part of that. They are also more likely to make up for that by infusing more energy into the music equation, right? Like either by sharing it or by just spending more money on software than they would before kind of brings us back to the question you asked earlier of writing things down. 

Speaker 1 (34:18):
Like, is it important to write these product principles down? If you don't write the product principles down for muse, for example, you will just have sort of the, you'll have the app in the app store and you'll have the price point of the app. And then people will just bring their own assumptions to the experience of the product and layer them on incredibly quickly, right? Like they will judge the book by its cover, then discarded almost immediately. So then you have to go and by articulating your thought process over the years of why these things are important to you to actually capture those people, you have to write it down or you have to sort of distill it. And I think that is something that you, by the definition of how you start at the company and how you're working, you kind of have to do. And I wonder if there is actually like Heroku had said, like, it felt very similar it's unless you explain it, it just seems completely irrational. It doesn't make any sense. And the people who are working, they're all just bananas. Right? The, um, so I think writing things down, if you find yourself not having to write it down, maybe you're not exerting enough of the principles that you actually think you stand for. 

Speaker 2 (35:22):
Yeah. And that's definitely, uh, an active project in many ways. I mean, we have done some of that work in the research lab and the muse design article, which now is pretty dated because that's describing a prototype long before we even had a commercial product, but we did try to articulate and I think did successfully articulate some of these things around 120 frames per second, or else, you know, you use both hands and the stylists, all that kind of stuff. And that's continued to be a guiding principle for us as we, as we build the product. And also as, as people come in to try it and they've seen, maybe they've read that article and they have those ideas in their head. And so they're more primed to get over that hump of understanding how this thing works. Um, but then in the meantime, I think we've developed and honed that quite a lot and yeah, could, could really stand for further writing down. 

Speaker 2 (36:11):
Although similar to, I guess, the experience I had at, um, at Horoku with 12 factor and we had a similar thing with in-kind switch in fact, where we really didn't do the writing until the very end we had been doing these research projects for three plus years and many folks, including within the team and externally wanted, you know, basically said like, we really gotta write this down and we would go to try to do it and would basically get stuck. We couldn't do it. We didn't have the words. And you know, if you're in a group of people and you're talking about it and you're waving your hands and you're scribbling on a whiteboard, and there's a lot of words flying around, but boiling that down into a sinked legible thing that an external person can just click through on and read and get a powerful disc, you know, have it effectively convey. 

Speaker 2 (36:59):
What, what in fact are the principles here? That's something that's hard to do upfront. In fact, it's, it's in all of these cases, I've always done it retroactively. And so I'm going to try to see here, if on music, we can do it more in the, uh, in the middle of it, or while we're still, you know, still in the very active, early days of development. Uh, but my, um, work on that so far, um, plus trust me, I have a lot of half finished drafts, uh, is, you know, it's hard. It's really hard because there are not words for it yet. 

Speaker 1 (37:28):
That was actually a question that I was going to ask. The two of you, as you're developing the principles, there's always more to do when you're building a product than you have time for everything you choose to do by definition means you're not doing something else. And it's a very real trade-off. And if you think about startups and how do you make the argument that it is okay to slow down the process of product and feature development, a little bit to capture all the deep thoughts that are happening as you're building it so that you can hone those principles versus following the lore of just, you know, ship very quickly, just go through and build stuff, um, versus deeply considering it. And the like, are you making that trade-off? 

Speaker 3 (38:08):
Well, I think that's really important as we were saying before, it leads into your marketing effort. Now you need this communication for people to be able to understand what your principles are and therefore to adopt your product. So we've set up maybe 40, 60% time, 40% on marketing and communicating these principles and what we're trying to do and how to use the product and 60% time developing it, which feels like a pretty good balance. I think if you just build something and no one can understand it and therefore no one adopts that that's not particularly helpful. 

Speaker 1 (38:34):
It's really interesting me to actually frame this work, not just as a place so that you build better products, but it's also a thing that when done right. Attracts more people. And so it's a very real and marketing 

Speaker 3 (38:47):
Go back to this thing about reality and truth. What we're trying to do is rely as align reality, our product and what people understand. And if any of those three things aren't mashed up, you're going to have a bad time. And so you have to do both product development and marketing to get them all together. 

Speaker 1 (39:02):
So this sort of goes towards an area that I think we can all say, we've struggled quite a bit with, um, uh, marketing at some point of scale. Like when you, you know, you're the first five to 10 people, you were a small company, you were effectively the marketing team, right? There's no one who has a title that says I own marketing and I'm doing marketing, but at some point once you get to know 50 people, I don't remember exactly at what point in time at, at Roku, we started sort of cultivating a marketing team, but what happens is the people making the product and the people thinking deeply about the product and the people who are theoretically supposed to bridge the gap of saying, Hey, these are the philosophies. And these are like, sort of creating the bridge between reality and like the product, as you mentioned, um, are no longer the ones making it, right? 

Speaker 1 (39:52):
Like they're further apart. And so now you have to figure out how to bridge that gap. And I personally have at least four deep sort of deeply technical products, never been able to figure out how to do that. Uh, versus obviously for consumer products, it's slightly easier for more of a, or, or, or even products that, that are sort of more readily understandable by any sort of knowledge worker versus then, okay. How do I truly explain the virtues and the trade-offs of a particular database? For example, you brought up databases earlier. If I don't actually build it. And, and that's a really interesting challenge in scaling principle, uh, product principles is, is, is something that I think is, is, is really difficult. 

Speaker 3 (40:37):
Yeah, for sure. I actually think that the problem of marketing early growth stage developer software products is like an unsolved problem in Silicon valley. Everyone I've seen tries and really struggles. I think eventually companies figure out something, but there's, there's no playbook. And the way that there is for product development and customer support and finance, for example, the closest thing I have to an answer here is I think that head of the company and the leadership generally needs to respect the problem and respect the problem domain and invest a lot of energy and marketing, which I do think we're seeing with, with muse, because Adam is, uh, taking a lead definitely 

Speaker 2 (41:13):
Skill development opportunity for me as someone who's always been very product focused. Um, but yeah, it's been definitely expanding my horizons. Now, maybe we're almost on a different topic here, but it's an interesting one. So I'm going to pull the thread max, you and I were talking a bit about, um, marketing, uh, and, and Mar uh, to Mark's point about there's no playbook. You were actually saying that what it takes to do authentic marketing for an early product is to not follow a playbook. That in fact, uh, you were giving the cloud app example. And so that was just you and one other person, right? 

Speaker 1 (41:48):
Depending on when we did this, I think we were three people. And we started out with something that I would very much frowned upon right now, which is early on when, when cloud app started to join the public beta, you actually had to tweet about it. And at that time, no one had ever done it. So it was novel and people were kind of excited and that sort of spread incredibly quickly, but then the more you do, and I really don't want to take credit for maybe I hadn't seen it before, but I'm sure someone else in the world figured out how to use that, uh, sort of spread as well. The more you do that, the more, it just becomes noise, right? Like it's the same as like the first couple of emails were never spam, but at some point, once you want to stretch that system, eventually like it gets indistinguishable, whether this, Hey, I'm reaching out. 

Speaker 1 (42:34):
If in case you need someone, email becomes spam versus not depending on how often they, they follow up. And I think with marketing and how you market, how you choose to market is actually very close to how you choose to build products. The best marketing is always the one that is most authentic. How do you know whether a marketing is authentic? It's when the person who actually explains it is truly a believer in the principles that the folks who are building the product are building. And like when you feel that sort of viscerally that that's what they stand for. And like, almost to a fault, the further you go away away from that, the less effective the marketing becomes. And that this happens both very small scale. So if you look at something that is somewhat of a contentious domain in general, but online advertising, if you go back and look at the deck network, I think it was, and how daring fireball, and so on used to do ads, they had these little tiny squares of products that almost all of them kind of believed in. 

Speaker 1 (43:34):
Like they would never advertise for something. And so that was like sort of the, almost the original influencer marketing all the way to tricks that people explore it now, by saying, look, we used to have display ads on the right hand side or on the left hand side of Facebook. And instead we figured out, no, by putting them into the feed and making them look like content, we're kind of tricking you into thinking that this is also reputable. And so you can obviously take it to the extreme at scale, but the principle remains the same of saying, you want to make sure that the marketing fields, as honest as possible. And honestly, the only morally in my opinion, right way to do it is if it is as honest as possible, right? Like if you're not trying to trick anyone. And so I've seen great, uh, applications of this for, uh, in teams of your size and even sort of small to medium companies, but it gets much larger when you're trying to market at scale, right? Like at some point someone is going to just try and tweak the words just enough so that someone else gets tricked and clicking and clicking the link. 

Speaker 2 (44:34):
I also think of marketing as being, not just the outbound communication, let us talk to you in this podcast or send you a email newsletter or tweet something, but also the receiving information from the market that it is a conversation. Um, and in some cases that's a very much a literal conversation. I think I've done all of us on the team, but probably me. Um, most of all have done. Certainly I've done dozens of video chats and in-person user interviews early on. And then, uh, nowadays tend to do stuff over email. I get into email back and forth. You know, if you reply to our email newsletter, it goes straight to me. If you email the hello, it use app.com. I think that's going to mark right now. If I'm not mistaken. And we try to respond to every single person, I often get into some pretty long email back and forth since, and really nice ones. 

Speaker 2 (45:23):
Um, and that's kind of coming back to that point of testing these principles against reality. You're validating them, uh, you're often someone says, why does it work like that? That's weird. And then you kind of come back with a, you know, an answer while we kind of did it this way because of X. But tell me, tell me about how you use it or show me, you know, show me a screenshot if you're comfortable with that. And then they could kind of explain that and we can explore it. And as that process, that's often for some of our principals really caused us to double down on that and essentially feel like we validated it and sharpened it based on these many, many conversations and others that maybe we've softened on or feel like didn't hold up as much. And we, we dialed back on a little bit and it, it is really these, um, these conversations with the market, but they're individual people, but people that, for some reason are drawn to either thinking they want a tool like this, or the values resonate with them. Um, and then that convergence over time against what we're trying to do and what it is that people that we think are in our demographics seem to need or want, or get excited by, you 

Speaker 1 (46:28):
Know, this world view, you can kind of describe marketing just as a function of generating principal overlap, whether you are the customer that you're trying to talk to is further away from those principles. And so you exert, like in your example, with emails, you exert more energy to like personalize the email and then actually like try and have an open conversation. Maybe your mind changes, maybe the customer's mind change, but essentially what you're generating is more overlap in the principles of the worldview that you have. And so as long as to Mark's point earlier, as long as the principles are in to the largest degree possible, true, then, uh, you are generating, uh, I think, uh, um, value because you're basically saying now one more person sees the world the way that I see the world. And as long as that is a good thing, then marketing is essentially not the way that we now sort of view it as the it's almost like advertising and so on is all about tricking people into something or like sort of exploiting weaknesses, instead of saying, turn it around. 

Speaker 1 (47:27):
If you have really strong principles that you in, then sharing those with the world. Marketing is just about the, the overlap generation of that. So you talked about Adam, you talked about the, the outbound, um, like marketing sort of, we are talking to customers and trying to generate overlap with the, the company to the principles that company believes in, uh, with a customer. But you can also, uh, look inwardly in a company and say, by having strong principles, we are creating overlap in what the employees believe in and in what the employees stand for. And if you ask me, like, what's the one thing that is really important in terms of leadership, it's creating clarity. And so principals, if they're good and true tend to keep Trey clarity. So I'm wondering how often in, like, so this is full circle. How often do you reference these principles internally and actually make decisions at muse and events sort of from, from how you hire, how you, uh, sort of try to mentor and grow people. And so on, like, I'm curious how that's working 

Speaker 3 (48:29):
For you quite important internally, for example, my old favorite, no spinners. I invoke that all the time. Um, and I, I think principals in general, they help you make decisions faster, crisper more consistently with less thrashing and noise. I think that's all very 

Speaker 1 (48:44):
Good. No spinner one is probably an example because it's very concrete. You can kind of say, Hey, if I am designing a UI that has a spinner and alarm bells should go off and I should reconsider my choices. And at the same time, if you start really deeply thinking about like, it works on the surface level, because you're basically just telling everybody who works on the product, Hey, no spinners. And then the product is better, but there is even an undercurrent, which is if I am a mindful, uh, maker that is part of building muse, I will try and evaluate why do we care about no spinners? And suddenly you start going to the next one, which is, Hey, software needs to be fast. If it's not fast, it's not fully shipped or whatever is actually an old good hubs in. And so it makes you a better contributor to the product because you now intrinsically get it. And so you might augment it and say, Hey, no spinners. And at the same time also, oh, by the way, I saw this API call didn't return and the whatever milliseconds that we expected to return. And so you learn something new as an employee, as part of the cabal or the co-op or whoever you're working. Um, because someone shared that principle and said, this is something we believe in, right. Like, so there's this transference of skills that happens over time. Um, if you adhere to principles, 

Speaker 3 (49:54):
Right? And then once you've derived that result for yourself, you can cash it in a way and you don't need to rewrite it every time you have the discussion. So you can make the decision much faster, which I think is important, not just in terms of speed, but in terms of emotional energy, which is very limited in the world of a startup. And you need to invest that towards making your customers successful and not making decisions in terms, 

Speaker 1 (50:14):
I really liked the framing of caching. Um, I don't know if you two have this a well, I actually do know because you send it, uh, over, but there are certain kinds of blog posts that are just inherently in you're having a conversation and you're just writing some texts and then you link a blog post that blog post usually has really strong principles. And what you're essentially conjuring up is a cache of saying, you know, we have this shared worldview and referencing this cache object over there. This is blog posts. Clay Sharkey's situated to offer is something that I think there's no conversation between the three of us that we don't reference it. And suddenly we've created enough context and obsessing like, Hey, we know we're talking about the same thing. We don't have to go down that, that, that decision tree anymore now let's navigate and go towards the new stuff. And so I really like the framing of caching. I think that's a very nice parallel. 

Speaker 2 (51:03):
Yeah. And I like there that it also gives you both a name. So this shared vocabulary, uh, which was one of my goals with 12 factor, I think it was also one of our goals. And we wrote local first, which is another kind of manifesto piece. And the idea of attaching this name to a thing that people within a company or a team, or even within an industry, you can use this word to describe the set of ideas that might, might have a very deep, be a web of nested ideas or a deep stack of ideas. And in addition to that name, whether it's situated software local first or 12 factor, uh, you can also, you have the URL, you have the canonical URL. That's, that's very linkable. So when someone says, what is that? You've got the citation. And that was one of my motivations with 12 factor. 

Speaker 2 (51:50):
And one reason I broke out each of the factors is their own page, as I want it to be able to, when I was in the thousands of conversation with someone, about what way, why do I have to specify my dependencies? I could just basically drop the URL and say, read this. Um, and so I think that's another thing you need out of these canonical, these canonical sources for defining a principle that we can discuss and, and build on. It's not necessarily a question of whether you agree or not. It's more of, here's a neat package that has a name and a URL, and we can either use this as a basis to say, yes, we both know this is a starting place. And as you said, max, go onto the, go onto the new stuff or say, actually, I don't agree with that set of principles. And so therefore you say, okay, well now we have a more fundamental conversation we need to have before we can move forward on whatever we're trying to collaborate on 

Speaker 1 (52:35):
One way in which I've started thinking about this is taking aside sort of the monetary incentives or the intrinsic. We like to make things muse. For example, once to encourage people, to see the world in a certain way, right? Like that's why it's a principled product. If you think about it, you don't necessarily actually have to build a product to make that happen. You could theoretically think of a metaphorical, like I have a bucket of links. So what is the most distilled bucket of links, smallest bucket of links that I can just dump on a, on a meeting room table and then leave. And the people in the meeting room will read all of those links and internalize that, and suddenly they have that worldview, right? And, uh, you can kind of think of a product as that bucket of, of links or references and so on, but in an even more distilled form than a bunch of articles. 

Speaker 1 (53:23):
And I think that is sort of the feeling of, uh, that you get where Heroku or 12 factor my bet here. And this time time will tell, I believe that the principles of 12 factor will outlive Heroku in the same way that I think that the principles in muse will very likely outlive the application use and they will live on and get remixed and so on, which, by the way, another good reason to write them down and sort of try and separate them a little bit from the product, but it is not such a, the most effective way is to try and distill it into a product. So someone can use it on a daily basis versus sort of saying, yes, I am going to care about the exact same things you care about. I'm going to read all of this, do all the research that you've done. Now, I'm just going to use the product, read the distilled version that you say, I need you to understand the product and then slowly my worldview sort of shifts. Um, and I think that another reason why I think principal products is just such a powerful framing for, for product development. 

Speaker 3 (54:20):
I think reifying your principles into a product is also important because it's an existence proof for the set of principles. Really the only way that you can know that these ideas match reality and all of its complexity and nuance is if you actually make something that has all those things working together at the same time. And that was a big motivation, I think, for doing the lab and then muse, we suspected the world can work this way. We couldn't be sure until it physically exists. 

Speaker 1 (54:45):
I liked that you bridged the gap there between, um, sort of research and observation of other products and saying, okay, look, these are the things that we found in other people and, and, and sort of in, in using them. But then it's like, okay, well, but now let's put this to the test and build one with those principles to see how well does this actually turn out. Right. And so, uh, yeah, uh, a very worthwhile endeavor. If you asked me, 

Speaker 2 (55:09):
I think that's a nice way to wrap on the topic of principled products, any of our listeners out there have feedback, feel free to reach out to us@aesophqontwitterorhelloatnewsapp.com by email. We always love to hear your comments and we'd especially love to hear ideas for future episodes and max, thanks for coming on, chatting with us and thanks so much for being a user, a customer, helping us along this journey. It was a little rough in the beginning. I know, but hopefully it's starting to pay off for you now. 

Speaker 1 (55:38):
Thank you for having me and for letting me be a part of the creation process of muse. It's really, really fun.

