Speaker 1 (00:00):
The entrepreneurial drive or in his case, the entrepreneurial drive of feeling agitated. There's like a problem or a thing that just seems wrong or weird or annoys you. And you just can't stop thinking about it and you look for solutions, but none of them really quite seem to fit low and welcome to Metamucil use as a tool for thought on iPad. This podcast, isn't about music product. It's about views the company and the small team behind it. I'm Adam Wiggins here today with mark McClenaghan Adam. Oh, we're entering a new year here. And for me, the holidays is a time to reflect and think back on what's learned. And for me, one of the biggest surprises of 2020 was this podcast we got started on it. It was, I don't know, just an idea that we wanted to try. And then to my surprise, here we are now 21 episodes later with thousands of listeners and something I really enjoy doing with you every two weeks. Give any reflections mark on this epic podcast journey so far. 

Speaker 2 (01:07):
Yeah, it's been great. I remember when we recorded our first, uh, demo episode, episode zero, if you will. I was using my AirPods in this Airbnb and Arizona, I think. And, uh, it was really fun and it didn't didn't quite land the first time, but we felt like there was a good spark there and sure enough, we followed through with it and over the course of the last 20 or so episodes, we've gotten really great reactions from our listeners and that's been the most rewarding piece. I think 

Speaker 1 (01:33):
Actually in that same spirit of prototyping we might use for product work. We sort of prototype the idea. We had to do a podcast by recording. I don't know, 20 minutes, I think it was yeah. In the freezing attic of this Airbnb, we were staying in, in Sedona, just recording into the voice memo apps on our phones. And I kind of just edited together with Farai, which is this little audio editor for the iPad. And even I think found some stock music and just shoved it in there just to get the feel. And then we listened to it and said, okay, does this and the audio quality wasn't good. It wasn't long enough. It wasn't, you know, we were still finding our groove, but as you said, is there a spark here? Is there something worth investing in? And we felt like there was kind of caused us to roll forward with figuring out how to do the real thing. 

Speaker 1 (02:18):
So I figured that since we've been at it for a little while, as well as the pallet cleanser of the new year thought, it'd be good to do something we wanted to do for a while, which is a listener questions upload to happily. We asked for kind of input feedback from folks at the end of every episode. And we got plenty of those over the last nine months we've been doing this or whatever, or sometimes by private email, sometimes from former colleagues or friends, very often from folks who don't know at all, sometimes through Twitter, et cetera. And then I recently just posted a thread on Twitter, asking for folks to contribute questions, lots of great stuff there. Thanks everyone for sending things in. And uh, yeah, I just thought we'd spend this episode talking through a few of our favorites. We can't answer all of it obviously. And certainly many of these things I think probably just serve their whole own episodes. So you can give us feedback on the feedback episode and tell us which of these you'd like to hear us talk about more. Do you want to start us off by reading the first question? Yeah. 

Speaker 2 (03:12):
So to pull the first listener question out of the mailbag here, we have a question from Gary Zuke and we got to add a blanket caveat here about the pronunciation of names. Apologies in advance. I hope we got that right. So the question is on designing advanced gestures says I am working on designing a new writing tool for myself that combines some of the stuff I love about Figma into writing. However, I struggle with designing with the right amount of fidelity. It feels like mock-ups are not enough to truly express the idea, but I don't want to go into prototyping, twirly and mock in the design space. How do you design the interactions from use and deal with tensions while prototyping? 

Speaker 1 (03:53):
And one reason we picked this. So we've gotten a number of variations on these happily. We have a solid following of design minded people and yeah, the traditional design approach is static. Mock-ups story. You know, you basically have these storyboards, here's a screen that you tap this, that flows over to here. And then even the prototyping tools, for example, prototyping built into Figma, uh, as well as standalone prototyping tools. Like I use balsamic for many years and this kind of tap through screens or click through screens as a standard mechanism. But if you're designing something with really sophisticated gesture space, for example, or lots of sophisticated transitions, um, that kind of doesn't quite fit that storyboard thing. And I feel like that's a little bit what Gary touches on here with this mock-ups are not enough to truly express the idea and yeah, my experience with this where we've tried a lot of things and we definitely don't have an answer. 

Speaker 1 (04:41):
That's certainly my experience has been that you just kinda wing it depending on what the, what the thing is. So sometimes we do do a lot of stills and just kind of classic flows often with kind of textual descriptions that say, when you do this, this should happen, but I'm getting more into know slightly more creative approaches. For example, Yulia, I remember did a great one quite some time back by sketching out the screens on paper and then recording a video of herself, kind of manipulating the papers. And so then things like sliding and other, you know, you could see the hands and you could see the gesture and she would kind of like, you know, puppeteer, essentially something that was a nice way to express the idea. And we've also toyed quite a bit with, for example, I've used framer a bit. Sometimes I just use HTML. Uh, Leonard has been doing stuff with origami studio to again, be more gesture and motion oriented and things you can even run on the actual device on the iPad. I don't think one of those feels like a silver bullet or a catch all solution. Yeah. 

Speaker 2 (05:43):
I don't think there's a silver bullet here or a single answer, but I do think it's really important to make it real Adam, this is one of your rules for creative work that I've learned over the course of many years, working with you and here you need to make it real because you can't really evaluate gestures, which are so physical without something there to actually be touching or at least seeing. But at the same time, implementing a full-on just our system handles all the edge cases and is integrated to the app is super complex. So what you want is a way to cheaply evaluate and de-risk gesture decisions. So a lot of what we're doing here is ways to kind of isolate the gesture problem or attack it more cheaply. So another example to compliment the ones that Adam gave, we have a now sort of internally famous idea of pink cards on a board. 

Speaker 2 (06:29):
And this is a demo app, which is basically a blank screen and you have hot pink cards that represent muse cards and you can implement new behaviors with them. And so the idea is you're not dealing with any of the other complexities in muse. You're just dealing with how do you manipulate these cards? Because we know once we have the cards, we can put an image or a text in them or PDF, but the actual manipulation of the cards with gestures is quite complicated. And so in that way, you can fully evaluate how did the gestures work? How does the implementation go? But you don't need to deal with all the other complexity and therefore costs of integrating it into a full-on app. Another example that we've done here recently is prototyping. And the web we've been doing this for our infinite canvas experiments, where for various reasons, it's just much quicker to prototype stuff on a webpage. You can just do a single page, HTML, JavaScript thing, and quickly learn. How does it feel that stuff gets dragged around? Now, there, you don't have the fidelity if you're not actually touching something, but you are seeing, okay, these things are moving. How are the content indicators changing and stuff like that. And again, you're really cheaply and quickly learning. 

Speaker 1 (07:30):
I think another piece of the prototyping is maybe what you described there as the, almost the reductionist aspect of, let me just pull out this one piece rather than trying to put it into a full sophisticated app code base. And that could even be, yeah, it's often the case that something like HTML and JavaScript is a faster way to prototype compared to kind of mobile development environments. But Yulia does tons of standalone prototypes where she just says, okay, we need to explore a new way that we do the transitions because we were changing the visual model. And therefore, I'm just going to make this iPad app. That's essentially not much more than a hello world of moving these squares around on the screen, but I can try this one idea in isolation, get it to where it feels. Right. And then I can go to the kind of backporting that into the main app. 

Speaker 1 (08:15):
So another cluster of questions we have is around zooming you eyes and sort of the navigation within a board. And then there's the navigation between boards, which of course you do through pinching to zoom in and out, for example, Hey, bang, bird again, the pronunciation caveat there says, I'd love to hear your thoughts on zooming you eyes or Ricardo Medina asks thinks this is one of our more interesting design choices and wants to know why it is disorienting and intimidating potentially to have the infinite canvas. So we wrote about that a bit in our memo, but maybe this is a good one to expand on a little bit. So our, tell us about the visual model of why we made the choices we have there. 

Speaker 2 (08:56):
Yeah. The zooming UI question is really interesting because a lot of people, when they first seem used, they say, oh, it's a zooming UI app. Like that's the thing that it does because it's so distinctive and so prominent, but that isn't necessarily a top level goal of view is we introduced the zooming UI because it solves some particular design criteria we had around how you navigate your content. So for example, I think it's really important when you press your fingers on the screen and you go to do a adjuster and you start the gesture that it immediately does something. And that it's a continuous experience from you star the gesture all the way to you finished it. And assuming UI is a pretty natural way to do that. Like as a contrast, a lot of apps navigate with like page changes, like you just kind of teleporting around, and that is quite disoriented because you don't know where you came from or where you're going. And that doesn't have the same naturalness that this gradual and incremental transition has, especially when you're doing a continuous physical gesture, but there are potentially other ways to get that. And there are ways that we'll consider it in the future. You could have a crossfade or a slide in or slide out things like that. So it's not so much that we want a pure DUI per se, it's that it gives these nice properties, especially in the context of a gesture system. 

Speaker 1 (10:06):
Well, and one of the original kind of core ideas or philosophies we were trying to explore back when we were doing this in a research context was how to tap into the user's spatial reasoning, because this is a very powerful part of the human brain. We evolve to navigate spaces in the real world, and to the extent that computer interfaces can tap into that and make things feel place E feel like a place and access those parts of our brain, the more we can orient and move around comfortably. Right? And I think in a lot of ways, the computing industry, particularly with mobile has gone that direction a little bit. So for example, standard iPhone apps have, first of all, usually some kind of light spatial thing of you tap an item, it kind of slides to the right. Then when you tap a back button that slide you back to the left and you have kind of this sense that the thing exists in a larger 2d space. 

Speaker 1 (10:56):
I would also argue something like actually the iPhone core interface for the home spring is a very lightweight zooming UI, particularly with the swipe up gesture and the zoom kind of transition. You get this feeling that when you're looking at an app, you're sort of zoomed up and then you swipe up and you sort of toss it away and it flies back to the grid and you can tap another one to zoom into that. Right? So the part of what I think makes the iPhone and mobile interfaces generally much more accessible and much more natural for most people is precisely because it's tapping that spatial reasoning. So we wanted to see if there was like a power user version of that centrally. 

Speaker 2 (11:32):
Right? Exactly. And that's this question of zooming potentially being disorienting or intimidating. We've been talking about this in the context of when you're in a single board and if you can arbitrarily zoom in and zoom out and especially if you can also pan in any direction without any boundary, it's kind of hard to know where you are. So when you start, you know, you're at zoom, you know, a hundred percent and you're in the middle, but if you do some gestures, like say you zoom into some blank space, it looks blank just like it did before. So how's it been? Are you, well then do you need like a zoom level indicator? And then you're into the whole Chrome thing. And then if you want to zoom out, do you up to a hundred percent or is it if you're close you snap or otherwise, you know, there's so many degrees of freedom that you introduce, which sure it gives you flexibility, but also makes it hard to orient, especially to some kind of standard landmarks that you would want. 

Speaker 2 (12:18):
So if we're thinking about our flexible canvas feature and other related ideas, we're trying to strike a balance between you have the flexibility to move around and to zoom when you need to see something closer. But also you don't feel like you have no grounding in your content. And I keep coming back to this idea of drawing on the physical world and here, like with your desk, you can zoom in like lean in to see something with more detail and you can kind of lean back to get something with more context, but there's this natural balance point that you returned to it, which is like, you're sitting neutrally in your chair and that seems really obvious or straightforward, but it's a really important idea. It's like, you literally know where you're sitting and it's so easy to lose that in a digital world where you don't have all these physical 

Speaker 1 (13:00):
Cues that trade-off between oriented and grounded and freedom. Openness spaciousness is extremely challenging. We talk about one aspect of it in our infinite canvas memo that I'll link in the show notes, but this is an ongoing challenge for anything we ever do with the visual model, which is you want freedom. That's part of the value of these digital tools. You don't run out of pages in your notebook, but that actually comes at the expense of too much freedom and you're just lost. Yep. So speaking 

Speaker 2 (13:34):
Of organizing your muse content, we very often get questions about that. So one recent one, for example, from Akash was how do you organize your boards by ideas by article or something else? So how do you approach that? Um, 

Speaker 1 (13:46):
Yeah. I usually have the answer of however you want or don't worry about it, which sort of his own satisfying in practice. When in of course, anything you put in music is private. We can see it, but I have had the opportunity to kind of watch over someone's shoulder, either virtually in a screen-share session or sometimes in person and see how people organize their stuff. And there are folks who do a very careful, okay, here's my work board over here. And here's my philanthropic activities over here. And here's some stuff avenue with my kids over here and they basically have, you know, sub board kind of like organizing folders on your file system or something like that. For myself. I find that I tend to use it in a more messy way. And this is especially true for me because music is really about what's on deck. 

Speaker 1 (14:34):
What am I thinking about now? Um, it's less about the longterm kind of archival of, um, I don't know, project material and more about what I'm working on right now. And so I tend to get a thing where I have a couple of work-related boards on one side of the screen. Maybe they kind of in the upper left and I have some personal stuff that's maybe more to the right, including maybe some journaling, but also some personal admin life admin stuff. And then I have like kind of a little archive space down, lower left. Then I might, if there's one particular project that's really top of mind for me in the moment, I might make that a little bigger and put it towards the middle. So then I do end up with like a board per not quite per project, but per like chunk of thinking about a project and those kind of migrate to my archive as they're not relevant anymore. I moved on to new things. There doesn't tend to be like a deep hierarchy where it's neatly sorted and taxonomically correct. It's more just to have a board for stuff that I'm thinking about, you know, by topic. And I just kind of put them roughly in clusters and then eventually those moved to an archive, then that's kinda, yeah. 

Speaker 2 (15:39):
I have a similar approach where everything comes into a sort of inbox or desk, and it's very much a messy working set. It's basically whatever I'm thinking about today. And then from there, any structure is sort of emergent. So if I have a few things on my desk that are related and I want to keep, I might make a board for that and put that board on my desk, that'd be an active project I'm currently working on. And then as I complete that project or it becomes colder, I might shuffle it down further into the hierarchy and that way hierarchies that I might need sort of emerge organically. So I don't try to preplan anything. It's just, once my current space gets too many items on it, then, okay, I need to basically rebalance the tree and push some notes down. Adam, you also mentioned kind of a mix of personal and work. 

Speaker 2 (16:21):
One question that we didn't pull up explicitly, but I've gotten a lot is, you know, how do I make different workspaces or can I have different users and muse, we made a pretty explicit design decision amused that the way you separate your top level context, shouldn't use a different mechanism from how you organize things at a lower level. If we want to build these general purpose primitives that you can use to organize at any level of your workspace. So for example, I have a big top level board for personal stuff and for work stuff, but those are just regular muse boards. We don't have a separate concept of like muse workspaces or muse users or music counts or something like that. Um, cause we want you to be able to reuse these primitives and flexibly, recombine them wherever you want. 

Speaker 1 (16:59):
The next question comes from Chris Carella. He says, I'd love to hear the projects and use cases people are using muse for. And this one is for me as a personal, not sure what you call it back-burner project or just a thing I've wanted to do for ages, which is have a gallery that shows sort of the type of person or says a few things about the work they do, but also shows their boards. And we did a little of that in newsletter, or sometimes users would send us screenshots, by the way, we love screenshots of your boards. And of course they're personal. And often people feel vaguely embarrassed because they're messy because thinking is messy, but it's really great. You know, when you're comfortable to share that, giving us a little peek at how you use a really, you know, pictures worth a thousand words as they say, but in any case for awhile, I would ask folks for permission. 

Speaker 1 (17:44):
Sometimes if we could put that in the newsletter, kind of dropped off on that love to do like a user gallery or something like that, because we have really some pretty interesting people doing some pretty interesting things. I get a real kick out of that. Obviously we've got our, I don't know, kind of core audience of tech. People probably came out of the in-kind switch days, product designers, engineers, computer scientists, product managers. But then additionally, we have all kinds of interesting things. We have a few restaurant owners. This was an interesting one to me, but actually it's great because you got the bringing the menu as a PDF and you can kind of mark it up and then you've got some photos of the food and then you've got like some screenshots of reviews of your restaurant and some competitors. And there's a map and there's, you know, you kind of mark all that up. Another one, I think you recently did a user interview with was a pilot. And these folks often take the, what is it like an iPad mini or something and strap it to the knee. Yeah, 

Speaker 2 (18:36):
It's an iPad. So they put some Velcro on their thigh and then put some Velcro on the back of the iPad and stick it on their thigh for the flight. So it doesn't move around when you hit turbulence. And apparently iPad is the sort of universal standard for private pilots because that's where the best private piloting software is, I guess. And then from that, and from the weather reports and from the radio during your flight, you're collecting all this information and it's PDFs and images and handwritten notes. And it's nice to have a way to bring that all together in 

Speaker 1 (19:00):
One spot. Also seen some attorneys using it for casework. There's one fellow that, or I should say one person who periodically sends in screenshots usually connected to bug reports or whatever, but it turned out as a, like a board game designer. So those really interesting card artwork, very visually rich, she might say. And then we also have a number of authors, but a really interesting case that I got to meet through our sport channel last week as a really prolific fiction author who has something like 50 published works and told a really nice story of using news to essentially work out a thorny point in one of their plots that they were trying to figure out for a piece. So it sounds like there's going to be a book published soon that muse at least had a small role in helping with the, of course not the writing of it, but the thinking of it, which ultimately is our place in the creative tool chain. So yeah, I would love to take the time to secure all the permission and get some screenshots and maybe get some photos and some quotes or something, and just have a nice little gallery on our website, but haven't quite gotten to that yet. So 

Speaker 2 (20:02):
Our next question is from Everly, he says, you guys clearly have a mission and you're building towards that, but there's also the reality of making sure you're delivering a unique value prop over other products. So in a paraphrase here, who do you think of as muses competition? How do you reason about that? 

Speaker 1 (20:20):
Yeah, I think competition is really important for understanding how product fits into the marketplace. And certainly when folks come to me for, I dunno, just input or advice, whatever on their products or their startups. One of the first questions I like to ask is who is your competition? Because I think that helps clarify things from use. I would roughly group three categories. Uh, one is the let's call them other multimedia canvases, mixed media canvases. That's Miro is probably the biggest player there, but a melanoma is one. I like a lot. Miro and Milano are both kind of web-based real-time collaborative. They don't have the iPad component. And then one actually that our guests on the last episode mentioned using escapable, which is this kind of targeted more at authors. But again, it's like a cards on a board type thing that works on the desktop app. 

Speaker 1 (21:10):
The second category I think of is this kind of broad knowledge work space and probably notions, maybe the hot up and comer there. Evernote actually is one that's really well-established. We hear about that one quite a bit. And then you have more specialty ones like liquid texts, which is kind of focused on PDF annotation and excerpting or actually one I've taken also a lot of inspiration, one which is called Devin think, which is this pretty old school desktop software, a collect up a lot of material and use it to essentially find connections and generate new ideas. And in a way I don't necessarily think we're directly actually feature wise. We're not very directly comparable, but just in terms of a digital space where people go to kind of collect a bunch of stuff together and think about it. I think Evernote's notions of the world are comparable tools. 

Speaker 1 (21:55):
And then the third category is what I've called the iPad native digital sketchbooks. So all the products I've mentioned so far, either web based may be with an app. Maybe not that they're really native to the web, or maybe they're native to the desktop as opposed to iPad native and you go iPad native. There are lots of interesting choices, but the digital sketchbooks would be good notes I think is really nice. One Notability is another one. Those are really pure, no sketchings, quite the right word for it. You can, for example, good notes, I think is a great piece of software. It's when I used prior to muse, I think you did as well, but it's really, it's really about laying down ink on a page. It is a digital transliteration of a sketchbook. They have a lot of nice sync options. It's good for making sketches and exploring things and writing out stuff. 

Speaker 1 (22:39):
You can add texts, but it's clumsy. You can't really add links. I think you can put an image in there, but it's, that's just not really what it's made for, but in terms of being fast privates and in particular that tablet, posture, and stylists use, you know, they're very inspiring. So I think muse tries to take some elements of each of those three, the mixed media canvas kind of classic knowledge workspace and the iPad native sketchbook, but it also doesn't have a lot of those features. And so for many folks, when they come in and they say, well, I'm thinking of switching from any one of these products I've just named to muse, but here's the features that I need. In some cases, we have made deliberate choices to leave out, for example, really sophisticated inking options because we just don't want to be a sketchbook as an example. 

Speaker 2 (23:25):
Yep. And I think actually a potential fourth category would be straight up paper notebooks. Uh, 

Speaker 1 (23:30):
Yeah, of course. Yeah. We've 

Speaker 2 (23:33):
Seen in our user research that a surprising number of people still swear by April notebooks. They're very reliable. They have low latency, they never run out of power. There's lots of great attributes of them. And so people keep going back to them. And in many ways we're trying to do with muse is bring iPads up to the level of the humble paper notebook. 

Speaker 1 (23:52):
Yeah. Great point. And actually, if you further expand that to be all analog ideation products, sketchbooks, but also whiteboards post-it notes, index cards, you count all of those. I'm pretty sure that, you know, if you just pick a random creative professional and ask them what they use to think through their ideas far more of them. I think that category that you just named that kind of analog thinking tool would dwarf all of the others. Right. That's the real incumbent that I think we're looking at is whether digital has something to offer against these very tried and true and rightfully beloved products for thinking. Yep. So our next question is from Brian's Zindler is about how we understand user needs. Ask how did you conduct the user interview process for muse? 

Speaker 2 (24:38):
Yeah. Well, I feel like this has evolved over time, so maybe we can work backwards. So now we have quite a few users, many of whom are very active and so we're able to engage with them. Sometimes they just come to us and volunteer. Sometimes they have support requests or feature ideas and engage them on that basis. And we say like, okay, like, that's an interesting idea. Can you tell me more about your use case? Maybe we'd get on the phone and chat. That's one avenue that we have. And then going back in time before we had products would have to be more proactive about finding these. And there, we would try to identify the archetypes, the types of people that we would want to learn from and reach out to them. And often these are the people in our network are people who we had some connection to. So there was some level of trust already. We would ask them about their creative process, what tools they use, things that they were happy about and not. And so on. 

Speaker 1 (25:21):
I really enjoyed the pure ethnographic research that we did in those days. It's tougher when you don't have a product, because it's kind of, you're sort of asking someone to tell you about how they work, just because, and you can say I'm associated with this research Institute or, you know, we're doing the survey, but it's a little bit less tangible if someone's using your product or wants to use our product, they're trying it out. And particularly, as you said, this support becomes in a way, a kind of lightweight, steady way to get a sense of, you know, what people need and want. And you make a great point there as well, which is folks often write in, but very reasonably with a kind of transactional question, which is, oh, I would like feature X and we almost always answer with something like, okay, well, that's interesting. 

Speaker 1 (26:04):
And we might say something like, yeah, lots of people have asked her that we'll, we'll put you on your list. We've got a little database, basically. We just kind of tag people with what they're interested in. But what we really want to know is why, like, what's the reasoning? Were you driving that in the product manager lingo is use case, which I sometimes, but it may be for normal people is just, how are you using this? Why do you want it? And so I try to dig in on that, like what kind of projects are you doing and what drives you to need this? And why are other ways you can do it not suitable? And the real good information is in that. But to my surprise, sometimes folks are a little bit, not that they're withholding, but more, I think they maybe just assume that we're most interested in talking about our product, which is actually a very reasonable assumption, but I'm much more interested in you. Like, what do you do? What is your creative process? What are you trying to accomplish? How does this tool fit into your life or not? You know, how do you aspire for it to fit in? But maybe you can't do that today. That is much more what I'm interested. 

Speaker 2 (26:59):
Yeah. Especially with a product like muse when people are doing so much wild stuff with it. It's not like for example, that Photoshop it's like people are editing images and there's some variance on that. Right. But with muse, there's so many projects that people are working on in so many different domains. It's super interesting to learn about before, up to 

Speaker 1 (27:14):
Absolutely. And maybe it helps that maybe all of us and certainly me or speaking for myself, I just have a real passion for creative processes. Generally. One of the reasons I enjoyed working on Roku was because it was very much about the developer creative process, the software engineer, creative process, and we're getting a glimpse into a different side of that through working on news. 

Speaker 2 (27:34):
Yeah. So speaking of creative process, we have a question here from Tim Lombardo. How do you recognize good ideas to work on? 

Speaker 1 (27:42):
I think this was a followup to episode 12 of our podcasts with any math shack. We were talking about idea development. And I had spoken about how I use for me, there's a sort of ritual to starting a new muse board and in particular, giving it a name or I'm saying there is a problem that I'm facing in work or life, or just an idea I want to develop that I think is interesting enough that I want to make this blank canvas for it. And I think Tim was thinking of this as is this a meta skill to develop, which is knowing which ideas to chase, which is really interesting. I hadn't thought about it that way before. I certainly have a strong hunch for what things to go after, which I think of partially as like an entrepreneurial drive, maybe it's something that is sort of an effective experience when you've been doing maker work for a long time or for a multi-decade career. You have a good, particularly if you do proper retrospectives, hopefully you have a good sense of which ideas panned out and which didn't, and then you have a good idea of which ones to invest in. But I don't know. I want to think about that one more. And mark, what's your answer? 

Speaker 2 (28:50):
Yeah. So one angle for me is getting a lot of different reference points and potential connections with new ideas that come in. And so that's about having a lot of raw material to work with raw intellectual material. So a lot of reading, a lot of time discussing ideas or people so that when a new idea comes in, you can kind of reference it against all these other ideas you have in your Corpus. And that's going to happen with things that don't even seem directly related. That's why I think reading about science and history and the academic literature and industrial edge, those are all really important to do. And it builds up over time. 

Speaker 1 (29:23):
Curiosity is upstream of having good ideas. Yeah, 

Speaker 2 (29:27):
Exactly. Another thing is I lean quite a bit on people who I think have really good radars or radars that are in tune with mine. For example, Adam is one of these people who just seems to have a really good intuition. Sometimes he comes to me and says, you know, mark, I just have a feeling we should, I don't know, start a podcast, let's try it. Oh, okay. I hadn't exactly thought of that, but I trust you. I want to do it. And there were a few other people who I have a similar level of trust and respect with actually Twitter has been a pretty important vehicle for this. There's some people that you can find and follow there. And again, it's not about credentials or popularity. It's more about individual people who have a specific articulated way of thinking. And on the basis of that, you can come to more heavily weigh their input. 

Speaker 1 (30:08):
I'm actually reminded of a talk. I saw many years ago by Paul Buchheit, who is the creator of Gmail. And this of course is in thinking in terms of product opportunities or what's a good product to build, which is obviously a small subset of what counts as good ideas, but happens to be the one I tend to operate in. And he talks about the entrepreneurial drive or in his case, the entrepreneurial drive of feeling agitated. There's like a problem or a thing that just seems wrong or weird or annoys you. And you just can't stop thinking about it and you look for solutions, but none of them really quite seem to fit for him. I think he was telling the story of being annoyed, that all email was slow and clunky and required you to do a bunch of organizing work that he didn't really want to do and losing track of long threads. And just the nurturing of that agitation over time turned into like a good understanding of the problem and the drive, the initiative to go and do something about it. Yeah. 

Speaker 2 (31:10):
I call this my problem. So at any one time I have zero one capital P problems. And this is things that I just can't help thinking about. I'm thinking about, you know, why are they wrong? What are potential solutions? What are potential angles for it? It's in the shower. It's, you know, when I'm taking a walk with what I'm talking to people, I can't help, but bring it up. And that's something that you basically can't really control directly. It's a function of your environment and what you're reading and so on. But when I get that, and especially when it stays the problem for a long time, I'm really inclined to go work on. I just have a lot of energy. 

Speaker 1 (31:41):
Yeah. One that I had a front row seat of was what eventually became your article on slow software or the article titled slow software, which is a look at why software is slow, why it's important for it to be fast, a bunch of the human factors. But yeah. Remember when you were developing that and a lot of it came in the form of just being constantly irritated and wanting to seek the base of that irritation. And it would, as you said, because it's the one thing you're thinking about it pops out in other places. I remember you having internal memos, you know, within ink and switch that were about maybe like a project and it was sort of related, but there would be several paragraphs that was basically ranting about like it's gotta be high performance and a sort of oh, okay. And like eventually that just grew and grew and grew and eventually took shape as this excellent essay that then was widely shared. 

Speaker 1 (32:33):
So this next question is about building news with muse. So this, unfortunately I couldn't find the original tweet. This was from around the time of our launch back in late August, early September, there was a real fire hose going on at the time. We were just getting hundreds of messages through all these different channels, Twitter, hacker news support. Yeah. The adrenaline was running high, but I remember, I thought it was a really interesting question. And I said, oh, I should actually do a whole Twitter thread on this. I should post some screenshots and talk about it. And then I don't know, there was a million things going on, so I just lost track of it. And I couldn't even find the tweet looking back so apologize. We can't the author that we can't give you credit. Yeah. I think this is a great one or sparked my imagination because the answer is, yeah, absolutely. 

Speaker 1 (33:14):
I think that is just so obvious. So much of the work we are doing and in general with product and business work, so much of it is developing ideas. And that precisely is what uses for, and to me, it was a real milestone in the business where, for me, Elise, this piece of software across from a research prototype to a product with legs and real world was when I started to be able to use it to do ideation on our business. I remember the one of the first real kind of major boards I had was our first team summit in Dublin. They're back now a year and a half ago. And you know, we had the different sessions. We're going to talk about the structure of the business. I had one board for some sightseeing we were going to do there in Ireland. Another one that was kind of just some of the scheduling stuff and some others that were sorta like free-form conversations that we were having. 

Speaker 1 (34:01):
And that collection of things was really, um, helped me absorb and work through everything we were talking about there. And in fact, I think of this as being self hosting is a kind of concept from computer science, which is if you're working on a piece of software, let's say you're working on a programming editor. There's a point at which in the very beginning, it's not good enough to work on its own code base. But at some point I assume that the I and sublime text and the S code, and so on the authors writing that editor also were editing the future version of the editor in the current version of the editor, that sort of self hosting thing is a good sign, that similar thing for programming languages and so on. So in that sense, the moment for me, it was a big moment when use became for me self hosting in the sense of the ideas and product roadmap and design work. And so on, at least that I was contributing to the business. I was doing a lot of that in use itself. Yep. 

Speaker 2 (34:57):
I feel like as muse gets more capable, we're able to move more and more of our work into it, which is a great sign. I also do use muse a lot for, let's say designing muse while I worked on doing these days is product architecture. So that's like, what should the pieces be in? How should they fit together? What should they be called? Whether nouns and verbs, what are the core primitives? How do you power the core engine and stuff like that? And that's a very contemplatives activity. And so it's really important that you have an environment that feels conducive to that. So I like to take my muse and go on my couch and scribble some stuff and maybe do some reading. And over a course of a few days, maybe develop an idea. It's actually leads nicely into questions of roadmap. So the first one is from Nicole Arsano and it asks, I was wondering if there's a Mac version or if you intend to make one. 

Speaker 1 (35:49):
Yeah. So this is a bigger rabbit hole than you might think the short answer is. Yes. For sure. We need to do that for a bunch of reasons. The longer answer is more complex because we think, or it's long been our hypothesis for why the iPad and tablets generally are an under invested in platform is because very often you have transliteration of either phone or desktop apps to the iPad and a mouse and a keyboard or a track pad. And a keyboard are just not the same as a touch screen and a stylist. And so then it's basically worse than what it would be on the computer. And then in the meantime, you're not taking advantages of the unique benefits of touch, and we would have the same thing, bringing it the other way. If you port an iPad native app to a desktop environment with that keyboard and mouse, it's going to be worse. And in fact, we've prototyped that out and seeing that there's a lot of ways that the basic metaphor of the cards on a board will work fine with a mouse, for example, but there's lots of other things that really will need some rethinking. Yep. 

Speaker 2 (36:45):
I do think it's going to be really important to get muse on the desktop. We said many times in this podcast that the creative process naturally encompasses a range of devices. You have phones for indigo, look up reading and capturing, and you have tablets, which is our current focus for reading annotating, contemplating sketching, brainstorming thinking basically. And then you have the desktop, which is the power tool for offering and editing. And it's very helpful to have your thinking work next to your author and editing work, and to be able to go back and forth as well as to do research sessions on your desktop, as input into your thinking. I think it's very important that we get to the desktop, but it's not going to be like Adam was saying, it's not going to be the same app transliterated. So there's quite a bit of design and technical work that we need to do to get 

Speaker 1 (37:30):
There also points to the other big challenge, which is, I think getting a version of muse running on, for example, a Mac or any desktop computer that has some changes to the interface that will make it feel natural with that setup. I think that's kind of a moderate amount of work. The bigger thing there is exactly what you described, which is if you're moving back and forth between desktop for one kind of setting and tablet for another well, that implies sinking right, and good cross device sinking in particular that has some of the privacy qualities. We're hoping to be able to achieve as a very, very big technical challenge. Happily is one we're working on right now and we're optimistic that it is a achievable and for us. So the next question again, is I'm going to do more of a, a paraphrasing of something we hear very, very often, which is basically just what's the muse product roadmap. 

Speaker 1 (38:22):
And I think some additional color on this question are a lot of the motivation is I've really come to realize how important it is for people to know not just what the product is and what it can do for them today, but also where it's. And that makes a lot of sense in the context of subscription software. You're not really buying it for today. You're buying it for the, you know, in this case, if you take an annual subscription, even if you don't renew, that's 12 months worth of improvements that you're expecting to accumulate. And that gets even more. So if you get into something we've talked about on some past episodes, which is in many ways, supporting an early product like this, it's almost more like a Kickstarter. You're saying I want software like this to exist. I think this team is the right one to do it. I want to support you financially to make that come true. But then that also has the additional dimension of you want to know and trust the team, but you also just want to know where's it going? Maybe the places they want to go don't match up with what you think is interesting or inspiring. So we don't have any kind of public roadmap at this. Certainly makes a lot of sense to me that people ask about this. Yeah. 

Speaker 2 (39:24):
And maybe we can describe this as our areas of interest in areas that were being pulled and drawn to both by our vision for the product, as well as quite consistent customer feedback and questions. There's a few areas that constantly come up that people want more. 

Speaker 1 (39:37):
Yeah. So I think really zoomed out, I think of the kind of three big tiers or sequential areas to work on is starting with the single user thinking tool. And that's the mixed media canvas use both hands and the stylist it's super fast. It uses all the screen for your content, really fully taking advantage of the iPad and stylist hardware. And actually this launch that we did a few months back to me was the feeling like we delivered that there's much, much more to be done there both improvements on what's there and more features a very long list on that. But I feel like that pillar is well in place. Then the phase two, if you want to call it that as well, we're working on now and I expect we'll take most of this year. We're just now entering. And that's the multi-user multi device stuff. 

Speaker 1 (40:26):
Satis I can access it from all my devices, the muse experience in each of those devices as appropriate to that device, phone, desktop, and so on. And then of course the multi-user collaboration sharing. How do I send stuff to clients? How do I send stuff to colleagues? How do I share in a way with people who are not using news or people who might be using muse, you can get additional benefits from that huge technical and design challenges there, but certainly a very fun space that we're starting to get some progress on. And then the final piece to me is what I would call the end user programming or the program ability of it. And I see, we have a question further down the list about that one specifically. So maybe we'll expand on that there, but that's just my take. I'm curious how you think of the overall roadmap. Yeah, 

Speaker 2 (41:12):
That's pretty much how I think about it too. And maybe to just drill down a little bit into the first and second phases there and the first phase, I agree that we have a quite solid foundation with this tablet, natives thinking experience. We've gotten very good feedback on that. Now there is some more to do just to give you a couple examples. One is we think it's important to be able to move ink across boards well, as move it within a board, which you can currently do. And that's a quite a bit of a technical and design challenge. Another one that I'm excited about is a non spatial collection type Ciscos back a little bit to our zooming UI conversation right now, the only way you can collect elements in muse is on a spatial board and spatial collections make sense in a lot of cases, but I would say not all cases. 

Speaker 2 (41:55):
And so I think we want something more like a set type that automatically manages the position and ordering and sizing and so on of your elements. So if you just have, say a stack of papers that you're reading, you can do something that's more like putting a paper on the stack as opposed to specifically laying it out somewhere on your desk and then phase two. Yes, it's a simple matter of making it run on everyone's devices everywhere. There's obviously a lot under that hood. There's a big technical challenge in going from all the data resides canonically on one device, two is distributed across all devices, but once you unlock that, you can do a lot with sinking across one user's device, as well as collaborating across devices. So I'm quite excited for us to be pursuing that. And then we also talked about how you need basically three different apps that you want for the phone, one for the tablet and one for the desktop. So there's quite a bit of work to 

Speaker 1 (42:40):
Do there. Yeah, certainly the on the product or design side, I think that while there's really good precedent for collaborative tools, including get hub for code Figma, for design Google docs for writing, there really isn't a collaborative thinking tool. And, you know, the sort of obvious thing to reach for is the live whiteboard, right? And in fact, in many cases, folks find us or imagine that that's what will be, is sort of like standing in front of a whiteboard with your colleagues, talking through a problem and scribbling out visual support. And indeed we may support use case very similar to that, but I suspect that there's a lot of nuance and interesting sub cases or related cases. When you talk about asynchronous work and the degree to which you want to do things in private and then share them with your colleagues for kind of input or to further discuss versus like starting together with a blank slate. I think there's a lot there. 

Speaker 2 (43:37):
Yeah. The way that people actually work together creatively or want to work together creatively is very complex. They want privacy of their information. They want to do a lot of stuff privately to themselves. And then they have a bunch of different granular collaborations. You know, you and I are collaborating on this podcast. We are collaborating together with the muse partners on the business. We also have all kinds of other stuff going on in our lives. And it's kind of formed these overlapping groups and correctly representing that and supporting that. And software is a really important goal of mine or this phase two. And that brings us to what you described Adam, as phase three of muse. Jimmy Miller has a question here. He says, I'd love to hear you all talk about end-user programming explorations that bring muse a bit closer in that specific direction. What is the place that you see for end-user programming in tools for thought and muse? 

Speaker 1 (44:24):
So this is a huge passion of mine career, long passion. I've written articles about it reaching back 10 years and more. It was one of the foundational inspirations for Heroku. And just to kind of briefly define and user programming. The idea there is that most software today is written by professional software engineers. It's not something that basically computer code and the programming tools and everything you need to write software is something that you really have to be a expert at in order to do not even just at a high level, but just at all. And the idea of making that more accessible, such that maybe not every single person that ever uses a computing device, but many more people could have access to that on the comparison on that is often made to literacy. So once upon a time reading and writing was something that was a tiny, tiny Leite of scribes and alerted people could do. And later on through the printing press and education, and some other means became something that almost everyone can do, not everyone's a professional author or really strong on English grammar or whatever, but almost everyone can write a shopping list or write a letter or an email to their friend. And so there's a version of this for programming as well. How do you think about end user programming as related to muse? So I suspect 

Speaker 2 (45:47):
For end user programming, as we typically understand it, that is users writing code, like stuff. I suspect you're going to have the clearest vision for that. And it, you thought the most about it. I have a couple different angles on this, which I'll share. One is I'm quite excited about the idea of the programmability of data. So we often think about programming as you have codes manipulating, like in memory variables and stuff like that. I'm really excited about the users having programmatic access to their Corpus read and write, and that being reflected in muse and outside. So you can potentially think of your end user programming as you're writing these little like bots, basically that are watching and crawling and manipulating your Corpus data and doing automatic things with it. It might be organizing your daily to do list or something like that, or something more complex. 

Speaker 2 (46:32):
We're doing summary statistics over all of your work for the past year. And I think there's something very powerful as well as accessible about accessing the underlying data. And that leads kind of into my next angle here, which is open-ended computing, which has maybe a generalization of end-user programming. And by that, I mean, users being able to do combinations of things that the designers of the program didn't specifically need to plan for. So with typical mobile apps in particular, the set of things you can do is basically the set that the product manager said you should be able to do. And if you want to do something that the product manager didn't think of, or doesn't agree with, well, too bad, delete the app or something you're out of luck. This is in contrast to the world of traditional desktop computing, where you have the standard file formats that any program can access and manipulate and the user can directly access by other visible file system. 

Speaker 2 (47:24):
So to take a simple example, if you're writing a text note and you don't like color of the text screen, you can just open up a different editor or you can CP it in a different file. There's so many things you can do, and you have so much agency because the files and the programs have this interface, that's kind of general and that different people can access. And that's something that I think we've kind of quietly lost in the world of mobile apps. You have a little bit of it with these share seats, that export standard ish file formats, but it's very clumsy and it's quite limited. And oftentimes the programs just don't like to export stuff easily. So what I'm curious about is how do you bring that desktop sensibility of open-ended end user computing back to the world of mobile apps. 

Speaker 1 (48:05):
I think this point of data being the center of gravity or the thing that matters to users and customers, I think as software creators, we tend to think that the code or the running software is sort of the thing that matters. And then data is this kind of thing that's added onto that. Like a database is something you attach to an application or the right to software and opens and it reads and writes to a file for example, but from user perspectives, data's what they care about. It's like I'm using your, I don't know what piece of software to write my master thesis. You know, they may like the software or not, but ultimately they care about their work. They care about the thing they're creating. That's more important to them and yeah. Standard data file formats. So I think once upon a time were much more kind of universal and easier to use. And those have sort of faded in utility largely because of the mobile world and finding ways to not necessarily step back to a previous time to get some of that value of, I don't know if openness is quite the right word for it, but the ability to manipulate your data in a powerful and free way, I think that's something missing. Yeah. Maybe 

Speaker 2 (49:12):
Agency is another way to describe it. Interests am. Yeah. We also talked about this in our local first paper, which we can link to, but yeah, the world of files gave you all this control and visibility and portability, but then they basically on their face when you get into the world of mobile and especially collaborative apps, and then with mobile and collaborative apps, we kind of went all the way, the other way and said, now your data is totally opaque and maybe you can't even get out, but at least, you know, you can see each other in the Google doc. We really need a third way. And that's something we're excited to pursue with muse. 

Speaker 1 (49:42):
Yeah. This is one reason we made it a priority from the beginning to these muse bundles that you can export our just sip archives. So you can open and they contain flat files and a little bit of metadata. That was something, but that's really just a very small step in that direction. So I'd love to see us do much more. And I agree that fits together with the end-user programming is ultimately about agency and grasping the full power of computing rather than being kind of at the mercy of the software vendor. Yeah. 

Speaker 2 (50:10):
Another thought I have on end-user programming from looking at it in the wild, if you will, is that what's really important is that people really care about the thing that they're programming and then they just need some little window or way in. So some examples of this one is Minecraft, where you have these Redstone contraptions, and it's basically a very primitive way to program and it's pretty gnarly and it's literally quite bulky and blocky, but people are really motivated to build all kinds of wild stuff. And Minecraft, another example, back in the MySpace days, people customizing their pages. And even I would say JavaScript and the web like frankly jobs, which is a pretty gnarly programming environment. There's a lot of things wrong with it, but people will so much want to be able to script their content and the web, they basically found a way to make it work. 

Speaker 2 (50:53):
And now you have these incredible JavaScript VM, which have wild performance. So a lot of the work I think of end-user programming is not, how do you make like some editor that people can think about? Clearly it's more like having something that they want to program and then giving them a little bit of a window in. And that's why I think this idea of the user's content and their Corpus is so interesting because people care a lot about the creative work and everything they put into their muse Corpus potentially. And so giving them a way to unlock that could be really powerful. 

Speaker 1 (51:17):
I agree. And I think this is one of the challenges of a lot of the HCI research that looks at end user programming or programming environments that are more accessible is they tend to start with the programming environment, but almost by definition, the people who are not programming today are people who aren't interested in programming for its own sake, right? They're interested in it because of what it can do for them. So that means they already have a thing they care about that they want to automate. They want to extend. And so that is the one of a few reasons as a very natural reason why anything and use programming related would come late in the roadmap relative to other things. Yeah. One little teaser you could get on what that might look like is for the capstone project. We did it in can switch and I'll link the end-user programming article we did there, but we had one of our colleagues did essentially a series of experiments with, as you mentioned earlier, that bots basically you could have cards that had a little script attached to them that you would write yourself. 

Speaker 1 (52:15):
And if you drop the card onto a board, it would then sort of do its action. So we had a couple of examples that were something like a sorting card. You could drop that on and it would sort of arrange everything in a grid. And there was another one that I think was a journaling card that would essentially put like sort of a title with the current date and time that was intended for a board you're using kind of as a journal. And those are simple examples, but they showed the kind of stuff that a person might like to do with like a personal knowledge tool, a thinking tool. And those were very, very rough and very early. But I think that kind of gives the direction of that. And furthermore, that also raises this question of end user programming can be sort of automating stuff for your own sake, but it can also be that you make a small plug-in or script or somebody you want to give to a friend or a couple of friends. I think a good example of this we've seen recently is Figma plugins where people write plugins for themselves, but they may also distribute them a little more widely. It's not really intended to be sort of a full fledged sophisticated application. It just extends or changes or customizes this environment that you're doing creative work in in some way that makes it suit your needs. And maybe you want to share it with a few other people. So imagine some kind of setup like that from you. 

Speaker 2 (53:28):
Yeah. And this makes phase two and three, if you will, very complimentary and important learning from our ethnographic studies of end-user programming. And the other stuff that we've read is that there's very little original end-user programming. It's mostly stuff you learned from a friend and then mutated slightly. So there's this kind of one original spreadsheet. And then it basically propagated through the world as people made different variants of it and copy pasted cells and so on. And I think if you have native collaboration and sharing in muse, that could be the vector by which the end user programming learning gets propagated through the system 

Speaker 1 (54:00):
Steal a cool bot card off of someone else's board by duplicating it exactly love it. This is a topic that is one we could easily spend a full episode on. So maybe we should wrap it there. And maybe we'll put that on the schedule for the future, right on. Well, if any of our listeners out there have feedback, either responses to what we've talked about here, or maybe you think some of these questions could be full episodes in their own right. Feel free to reach out to us. We're at muse app HQ on Twitter or hello and muse app.com on email. We always love to hear your comments and ideas for future upsets. Well, mark, it's been a real pleasure doing this podcast with you for the last 21 episodes. Uh, imagine maybe we can do another 21 more 

Speaker 3 (54:46):
Episode with a far duet. All right. See you next time.

