Speaker 1 (00:00):
So I think our space and the good thing is that niches are powerful now because niches are big enough. So if you only solve a smaller problem, but you solve them really well, you have a shot at that. 

Speaker 2 (00:17):
Hello and welcome to Metta muse use as a tool for thought on iPad. But this podcast isn't about muse the product. It's about muse the company and the small team behind it. My name is Adam Wiggins joined today by my colleague, mark and Brannigan Adam and our guests today, ballon Oros of craft. Hey Adam, and balance, you live in Budapest, which is a city. I had the opportunity to visit for about a week. Sometime back did all the things, I suppose, the tourists normally does got a bike rode around, looked at the big, beautiful bridges and observed the main government building, which is really a stunning piece of architecture. Yeah. It looks even better in real life than in the pictures I would say. But of course that's probably the tourists perspective. What do you like about living in the city is more of a native. 

Speaker 1 (01:08):
So for me, living in the city is really about being close to my friends and family. So I had been born in Budapest. I think Budapest is a very livable city in the sense that it has walkable areas. It has greenery areas. You can use cars. And really the interesting part about Budapest is I always think, you know, we're so small in central Europe and nobody will know anything about Budapest, but typically this is what happens when I talk to people of, Hey, I've been beat up as in they say, yeah, I've been there. You know, I've been there for a week or two days as a tourist that I love the city. So it's nice. It's actually more away to the visited than I would have assumed earlier. 

Speaker 2 (01:45):
Yeah. Well, Berlin is also a city that, uh, has a lot of tourism of course, but, uh, it's had a different feel in this last year when travel restrictions and the normally areas that are full of tourists, uh, are pretty quiet. Not necessarily don't necessarily see that as good or bad. It just changes the energy is a Budapest, got a different feel in this last year. 

Speaker 1 (02:06):
Yeah. So God, a very different feeling. I actually have to say loved it. So we have areas like the castle and Budapest, which usually, you know, us locals do not visit because it's very full with tourists. And in these days it's been quite empty. So I have a small girl and we went out there a lot and you know, play on the canons and in the old streets. So it's funny how a little bit, it felt like you can get back very loved part of your city for locals. And it has a very, very different pictures. So at least there are some things that aren't totally negative in this sense of, we did actually rediscover a big chunk of our city and I liked that 

Speaker 2 (02:53):
A lot. Mm yeah. That makes sense. I mean, obviously there's a big economic impact for a place that is a big of the economy is tourism, but yeah. Good to find that silver lining, I guess. And before we get into our topic here, I'd love to hear about your journey that led you to creating craft. And of course, maybe you should tell the audience also what craft is. I'm a user customer, I've used it to write any of the recent news newsletters. I also wrote a pretty long essay called making computers better. That was entirely been using craft. So it's my go-to writing tool these days, but I'd love to hear your description of how you pitch the product to folks and your journey in coming here. 

Speaker 1 (03:32):
Yeah. So it's very interesting. So for me, cry at Kraft is a product that helps me think, and I like to think a lot through writing and it was really inspired by the fact that I'm a very mobile person. My job has been in the last 10 years of Iran, a company which built mobile apps. And then I ran mobile for Skyscanner, which is a flight meta search engine. So it helps you find flights and I've been overseeing the mobile product. And I always had this frustration that it's so hard to think on our devices. So hard to capture notes, so hard to structure our thoughts. And really this was the real inspiration for me of how could I use these beautiful touch devices? And it's not just the iPhone, it's also the iPad. And when I started in 2016, we didn't have the pencil or pencil probably we had, but the first generation and it wasn't the iPad pros, but you could just feel that this device is so much easier to move around. 

Speaker 1 (04:34):
You know, you can pick it up it's battery, life is superior. So it was the tool I wanted to use for my work every day, but just the lack of software, because essentially at that time, and even today, frankly, most iPad products are blown up iPhone products. They're not really optimized for that form factor. And I think that drive of just willing to use that beautiful product every day and being able to use it productively was one of the core factors of me starting craft because on the web on desktop browsers, there are many, many products that are actually really good, but when it came to working on non markdown stuff, because I don't really like markdown in the way of, I don't like to see the syntax and it's too techie in the way for me, there just wasn't anything between the complexity of Microsoft word and plain text editors. And I just felt I need something there to be productive. And this is what led to where we are today with craft. 

Speaker 2 (05:37):
That certainly speaks to me personally, but also in terms of some of the motivation for amuse, even though we started in this research background, one of the things that happened there was in looking for sort of tablet platforms as a potential place to explore power tools and then realizing just how good the iPad in particularly with the pencil, once that came along, what an opportunity that represents and how exactly as you said, how woefully under utilized that opportunity is because yeah, the apps just aren't built for it. So another notable thing here is I think you built the iPad version first and you have a Mac app now, but that's built on this catalyst technology and essentially allows you to start with the iPad, do the advanced gestures and that sort of thing. What motivated you to do that? And what was the experience like to port it across? 

Speaker 1 (06:26):
Yeah, so we've been iPad first and then actually went to iPhone and asked her iPhone did a tour on the Mac and really catalyst was extremely challenging. It is still is extremely challenging. And the reason we did it was we figured if it's for free, because we can just do the same code base, why not do it? And at the start, it seemed very easy because it's just going to work. But then as we realized that for, you know, a Mac product, we need to do completely different UI interaction models. It did turn out to be quite an investment and it is still an investment, but we do see that it's being used by a lot of users and having access to their notes and writings across platform is extremely important for them. So we would have eventually probably built it. I think we've been a little bit overly optimistic on how hard this is going to be, and that turned out for now quite well. 

Speaker 1 (07:27):
But honestly, we are still struggling with performance, especially on the non-Apple Silicon chip max. So on the new max, it's amazing. I mean the worst Mac for performance you wouldn't imagine is the 2019 16 inch Mac book pro. So what you would think is the fastest, because if it's not plugged into the battery, it uses a much weaker graphics card for that retina display and it makes everything very slow. So it's very [inaudible] but it's interesting. Yeah. We had a similar issue with muse on the iPad and the iPad pro where the iPad pro a large version. Why is that 12.7 inches by nine? Yeah. Yeah. There's just so many pixels. And so if you have any inefficiency, even the recent models, you get frame rate loss, whereas the older iPads that were nine or 10 inches, it's not nearly as many pixels, it's much more forgiving and especially, and then if you go back to the old, old iPads, which have only the simple, the non retinal pixel density and your product just flies and you're like, oh 

Speaker 2 (08:35):
Yeah, yeah, there is a little bit of this treadmill. Sometimes that hardware gets better and faster chips get more powerful and everything, but then we want to do more with, and retina is a perfect example where that essentially just doubled the resolution on both dimensions, but of course that's multiplying effect of essentially four X, you know, load on all your graphics cards and, and storage and bandwidth and everything else. So it seems, we're always in this homeostasis of computers get faster, but our software doesn't get faster because we use it to do more impressive things. And I'll paranthetically note here, you have a great guide to using catalysts that I'll link in the show notes for more technically minded listeners. But if you put aside just the engineering effort, even the design side, as you said, the Mac is just a totally or desktop computers is just totally different platform mouse or track pad keyboard. 

Speaker 2 (09:25):
That's very different from touch from stylists. And this is something that's kind of a point we harp on with news that we really do think that for a lot of creative professionals, those, these three devices in your life, the tablet, the computer, and the computer workstation, let's call it and the phone and they all serve different purposes and they're all important. And exactly, as you said, it's important to be on all of them, which is why use, we'll probably have a Mac app here in the future at some point. But if you just take one from the other, you take from the desktop import to the tablet or from the tablet to the phone or phone to the tablet, as he pointed out, it was more common. You get this transliteration problem of you're bringing an interface that is not native there, and then it just feels bad. It doesn't work well. So I would imagine that that process of adapting your sophisticated gestures and your sort of very modern writing tool to also be consistent with the tool of the, you already had on the tablet, but also be consistent with what people expect on the desktop. That seems like a big job. And one that doesn't end as you add new features, right? 

Speaker 1 (10:23):
Yeah. It's very challenging. Like you mentioned three different device classes, like the phone, the touch screen tablet and the workstation computer. And I think we, the challenging is that these are emerging, right? So when you think about the new iPad pro with trackpad and the keyboard, and it's when you sit in front of it and you interact with it, you want to interact as if you were on a laptop. And then when you look at, you know, some of the pneumococcus releases and how those shift visually towards more favor in iOS. So really what's very challenging for us is the iPad actually, because the iPad is this very hybrid device, which a lot of people use as their laptops, especially students and the same interactions, fully keyboard, you know, very, very touch the screen. And then you have the other half of people who use it with touch or stylists. 

Speaker 1 (11:15):
And it's not even that segmentation because the same individual within a minute difference might, you know, take it out and use it completely differently. And it's very interesting. For instance, we have a section in search like on Mac or west, we show the search previews. So when you get a list of results, you get a Hoover or with the keyboard, you can move up and down and see the previews of actually different results. And the real challenge for us is when you have a keyboard attached, we want to do this, but when you don't have a keyboard attached with touch, you don't really move focus between UI elements, right? You just on something and then it opens. So then we have to hide the preview area. And there's no real strong API, which helps you to understand if the user is actually using a keyboard at the moment or not. 

Speaker 1 (12:05):
So I still don't think we fully understand the spice starting on the iPad of, are we going to base the Mac app based on the iPad, or are we going to move the iPad towards being similar to the Mac or is the math to completely different story? So it's extremely interesting because this whole ecosystem is a moving and shifting target. So by the time you think you understand it, there will be a new accessory or, you know, who knows maybe in March or may, we're going to get a test, screen Mac, and then we're going to go completely bonkers. But it's extremely interesting. It's one of the biggest challenges I've had in my career. And it still is of just figuring out how pieces come together. 

Speaker 2 (12:51):
I'm a big fan of multimodal input and being able to convert modes a little bit. I use my iPad that way. I basically haven't had a laptop and a couple of years, and I use my iPad as my travel device. Then I've got a full size workstation that's stationary and plug the wall in my home office. And yeah, the iPads convert ability between flipping up the keyboard versus more classic tablet mode, landscape versus portrait leaning back in a chair, sitting at a desk, pulling up the stylist's touch versus mouse or track pad. I really liked that. And even something like voice input, I really like having a lot of options being switched around. I agree that right now, both the design conventions have not yet evolved to cover. I think even a tiny fraction of what's going to make truly fluid multimodal inputs work well. 

Speaker 2 (13:39):
And then some of it is also technical, as he said, there are cases where, for example, we needed to detect whether the virtual keyboard was on screen versus a hardware keyboard. Could you do different things? There's actually no API for that. I think we did some hack that was around just checking the viewport. If the view Ford suddenly cuts in half, that means that the virtual keyboard has slid up. And now you might want to do something in response to that. But I think it's a good illustration of the deficiencies there reflect that what you are doing, what I hope we are doing as well are really on the cutting edge of this kind of new world of multimodal input and devices. 

Speaker 1 (14:17):
And when you say multimodel, you know, one person might think two or three input sources, but we really have touch. You have pencil, which is a very different type of touch. You have keyboard and then you have mouse and you can never know which of these the user has or does not have. So designing interfaces and workflows, which can adapt to these are, as you mentioned, we're just not there in terms of design patterns and evolutions. And I think even Apple's own products often are subpar compared to what could be achieved, 

Speaker 2 (14:49):
But that also makes it an exciting to work in, right? Absolutely. I like to be on the frontier. So 

Speaker 1 (14:55):
Exactly if you like to throw away stuff and experiment and, you know, figure out how it could be better, it's an extremely exciting domain to be in. 

Speaker 2 (15:03):
Well, maybe that naturally brings us to our topic today, which is software, which is focused on interfaces. So the contrast here, I think, is that craft and muse and a few others, I might mention are really about offering you and selling you, right? You pay money for software that will give you a really great interface for doing the thing you want to do in the case of craft that's writing in the case of use, that's thinking, and the way that most software I think is kind of built these days or the value comes often from the data, right? So the fact that with Gmail or notion or something like that, it's that all of your company's data, your emails or your documents are there. And you know, maybe the interface is good. Gmail is a good example of something that I think originally was really breakthrough when that interface came out 15 years ago or whatever, but now the reason people use it, I think is more that, well, they already have their data there, their email address. 

Speaker 2 (16:00):
They're not quite lock-in, but maybe more there's a gravity to that data. And in fact, as a result, when you look to the way that companies structure their business models and things like that, they're really oriented around how do we get people's data and hang on to it. And that creates a kind of stickiness in the product. And I think speaking with you, you almost have an offset view of this. And in fact, you just released a feature called craft connect, which is more about giving people options about where they store their data. I think because it seems you want to be competing on the quality of your interface rather than owning the user's data. Is that a fair way to describe your position? 

Speaker 1 (16:40):
It is a fair way, but I look at this at a much less strategic way, right? So it might not be a strategic mastermind, but the way I think about this is, I mean, our software's goal is to help people and believing that people only use our product, I think is extremely arrogant. And it's untrue because we are all part of a workflow, especially in today's world, where there are just so many SAS was, I mean, you have data analytics, you have emails, you have get hub, you have slack, all of your data scattered across everywhere. And the reality is, if you want to think, if you want to work, you want to work with all of this data. And, you know, we hope craft becomes part of that workflow, but we, by no means want to be your single point of workflow because we will never be able to cover all of that innovation and all of those features that others do so well. 

Speaker 1 (17:34):
So our motivation is purely of, we want to acknowledge that we are not the only one in your workflow, and we want to help you be productive with your workflow. And this consists, I think, many things, but one of the things we want to do is to all similar apps, which provide markdown in put or API, we want to tailor our export so people can move across because some people might say Julissa's is a competing product, but the way I look at it as Julisa an amazing markdown editor and so many people love it. And if you just look from the expert capabilities, it has very different expert capabilities than craft does. So why shouldn't you be able to meet her data across, without friction? So really for us, that is the motivation on this of, we don't see software as an end state of your data. 

Speaker 1 (18:28):
We look at data as it being part of your workflow and you use one specific tool to modify that specific data or to create that data. And then you move to another one and the more frictionless we can make it, the more value we provide to users. So at the end of the day, I think it is very much related to what you said in a way of providing a better interface. And that's why they choose us for specific tasks. But it's from a plain simple way. I cannot just live in craft. I mean, I love the product. I build a product, they use it a lot, but I use a lot of other tools and I appreciate if I can really easily move my data between those tools. And I, this was a lot how it used to be in the file system, where products wrote out files on your desk, or even before in the Linux and Unix systems where every product produce text output in green protects input. 

Speaker 1 (19:28):
And that has very strong attributes of how you can then own your data or use your data in creative ways. And I think data should be used in creative ways. It should be yours and you should be able to hack it, play with it, tweak it to what you like to do versus us trying to use it. As you said, as a moat or as an aspect of why you shouldn't leave our service and keep paying us. Yeah. This IO thing is really important and something that we would definitely agree with Adam had this observation when we were in the lab and then starting muse, it's very common for product developers to look at personal information workflows and see, oh, there's all these apps. And all this data is scattered all over the place. It would be great if it was all in one place, which is true as far as it goes, but just, it just never happens. 

Speaker 1 (20:14):
And in fact, if you try to make the everything box, which many people have tried to do, you just make the problem worse. Cause then you have one more thing that has some, but not all of your data, inevitably. So I really like the idea of embracing good IO that is import airport. Maybe you'd call it import export to get data in and out of the app and doing that is extremely hard because most of us have very limited resources, right? We're a small team, you're a small team and you have to figure out if you're going to work on making it easier for the users to export, which by the way, today is not a really requirement. Are you going to work on all the features? I guess you also get from users, I buy your product. If you support this, you know, I will do this. 

Speaker 1 (20:50):
If you have that, you don't have this feature, so I will not use you. And I think that's a very challenging aspect of it. Typically you don't need these export or these IO tools that much, but when you need it, you really need it. So it's not really a selling point in, I think it will become more important as people get more conscious about this. And there are more examples that people can use, but because of that, it's extremely challenging to schedule in terms of work and development and resource allocation. Because first of all, you need to do a lot in order to be able to claim that you have a good import export. And second, it's not going to in the short term directly influence your revenues or your growth rate or anything like that because it's not a viral feature at the same time. That's why I believe, you know, fundamental values are important because that's the only way you can make time for these types of features. 

Speaker 2 (21:43):
Mm yeah. Definitely speak in our language there. Well, I think in terms of why I was attracted to the product initially, and I liked the iPad first interface and the powerful gestures and things like image support is first-class which it isn't. And a lot of these more markdown oriented editors. But the thing that I think actually did sell me was your support for the text bundle format, which I hadn't previously come across, but it's essentially just like a zip file with a markdown and then a bunch of assets. So Mark Downs, great terms of being pretty universal, but bringing your images across is often kind of ad hoc. Doesn't work that well, very manual mark. And I talk a lot on this podcast about sort of the multimedia world we live in now, it's not really just taxed or just images or just video. You want all those things together. 

Speaker 2 (22:33):
So for me, if I write an article is to intersperse with these figures images and video, of course, that's part of the article. And then, so I was pleased to both see your support for this. But then I was able to write a little Ruby script that essentially parses the text bundle format and then outputs HTML, which is ultimately, of course, where I published too. You know, you could have made your own proprietary format. This is actually something that makes it easy to move back and forth between things like Ulysses and many other writing and kind of mark down oriented editors, both on iOS and otherwise. So I would argue you got one sale from sticking to your principles. 

Speaker 1 (23:07):
Yeah. But you did use it before, right? So you did have a feeling that it could be nice if, and it's really interesting because I did not know about textbooks. As I mentioned, I'm not a big fan of the mark world from a user perspective. I am a big admirer of what it enables, but I, myself, I do not use markdown and it's been actually users. Who've been, you know, pushing us this direction. So I very much remember there has been a number of users pointing us toward sex bundle until we finally understood it. And we finally said, yeah, well, we should actually do it because if it helps users, it will be good. And that's my belief that in, especially in long-term these principals, they pay back at an extreme level at the same time in today's startup world, where you want to create these minimum viable products and you want to go fast and you want to focus on growth the next month. 

Speaker 1 (24:00):
And the next week, they are often hard to validate or really just, you know, reason why you should be doing this. For instance, in our case tables. I mean, every day we get 5,200 requests on where are our tables and we're still fussing when expert in part improvements, et cetera, building tables, because I feel tables we can add later on, on the foundation. But if we screw up export import, we add tables in a way where we don't understand how we should implement for it to be able to support both marked down both CSV formats. We are never going to be able to retrospectively fit that in a functional or in a productive way. 

Speaker 2 (24:41):
Mark, you mentioned of the everything box earlier, reminded me a little bit also of this is a differentiating point between professional tools or serious tools. I know call that exactly, but the category, the muse and craft both fall into versus what I would call consumer apps. And I think in the consumer world, you do want that all in one easy to use. I don't need to integrate anything. I don't need to have any ownership over any data. Whereas the more you go to professional creative flows, the more you want a mix and match of sometimes the industry jargon is best of breed. That is basically the idea that you can get a bunch of different tools and you have a flow workflow exactly. As you were describing earlier, balance where your work goes through this series of points in the offering process. So I think of something like photography as being a good example, where on the consumer side, you want to Instagram, your phone has a camera in it. 

Speaker 2 (25:32):
You've got an all-in-one app, takes the photo. It applies the filter. It maybe does a couple of other things and it actually posts it on a social network. And that's what you want. It's nice and easy. You don't need to, uh, you know, you don't need to put any pieces together, but professional photographers, of course they want their DSLR camera. They've got a bunch of different lenses they're choosing between they capture photos and raw format. They take that into some kind of processing tool, you know, Lightroom or something like that. Do some things on it, maybe shift from there to, and then maybe your publishing format is going to be a different place. So there's this progression of their work through these different tools. And while it's not inconceivable to build a single everything tool that did everything professional photographer wants to do, that would be a lot for one company to do. And then especially as the world changes, yeah. Just being able to mix and match the pieces is extremely valuable. And so most professional tools and professional workflows do have some kind of standardized formats or ways to inter-operate data. 

Speaker 1 (26:33):
So I'm not sure I agree with professional versus non-professional separation. I think both with muse and with craft. What I like about these tools is, you know, I can give my wife the source. I mean, sure. If she needs to learn some gestures, which might take two minutes to fully understand, but she's a non-technical person, a very non-technical person she's in HR and she can perfectly use these tools. And then I assume you have a lot of very, very deep thinkers who gain exponential value of your tools just as with craft. A lot of people create backlinking and knowledge bases, which are extreme in some cases. And I think that is an attribute of a really good tool. I usually say Microsoft XL is my role model in this case where, you know, people use Microsoft excellence that have a calculator or just basic personal finance yeah. Data scientists can use it. So I think there's this belief that great software, and there's this understanding of how professional software looks right. And it should be ugly. It should be, you know, like a terminal 

Speaker 2 (27:38):
A little bit intimidating maybe. 

Speaker 1 (27:40):
Yeah. Because it's like a terminal. It should be able to do data import export. And I mean, you guys have been, you know, working a lot on really professional back and focus, you know, services and software. But I think we should just end this of, you know, saying serious software should be complex and unapproachable and that's why it's a workflow. So this is very interesting for me of how we can build, I believe software that works from the start for very simple use cases, but grows with you in a specific domain. Yeah. Yeah. I think, I think there's something to that. I think there's a way to sort of reconcile these two perspectives where there's a spectrum of ambition or complexity or sophistication of what you're trying to do, which tends to correlate with whether you're a professional user or not, but it's not one-to-one correlation. 

Speaker 1 (28:28):
Right. And we want to have software that has a low floor. It's easy to get in to. It has a high ceiling to my mind. I would agree that Xcel is probably the best example of this. You can get started really easily, but then people can build almost everything in Excel. But I think there's also this like product design humility piece, where as the user's goal gets more sophisticated, the probability that any single piece of software will accomplish that goal approach zero as a robust empirical observation. And so you need to have the humility as a product designer to facilitate the IO, to facilitate the workflow somehow, as you're dealing with these more sophisticated workflows. Absolutely. 

Speaker 2 (29:05):
You also mentioned Unix, which is certainly one of our tos for first of all, just a software system that has a good founding set of principles. But also in this case specifically, the, everything is the file, small sharp tools, text inputs, and outfits that flow together. And essentially it's the whole design of the system is that things be composable and you don't make the everything Unix command. You make a command that does one simple, useful thing. And then you pass the data forward to the next thing as well. But I would argue that I think the apps world, we are swimming upstream. We run into this a lot with muse, as well as other small iOS products I've worked on where really it's built around this app model, where the data is very much locked up in the app. It's not even an introspective will by the users without great amount of effort. 

Speaker 2 (29:53):
And there are some standard ways to pass data, for example, the share sheet, but often there, that can be confusing. It's a kind of a narrow aperture. It's hard to do all the things you want to do by comparison to the file system model. And I think there's huge number of benefits to that model. It makes computing much more accessible and understandable to many people and certainly the mobility of this hardware and that sort of stuff is great. But then trying to live in a data inter-operability you own your data world and play along with the best practices, let's call it or platform conventions of iOS. Is there some pretty serious friction there? I would say. 

Speaker 1 (30:34):
Yeah, I think there's something very interesting going on with a data layer here and it's worth double clicking on what's happening. So back in the classic Unix world, you have typically text files and text applications, and there are many nice properties of that. For example, you have separation of the data storage layer completely from the application layer. You have this property that everything is a self contained single stream of bytes. You have this property that you can just cat the file and you can read it and you have the property. That's easy to share there, all these nice things you get, but it starts to break down when you add the features that we've come to expect from modern apps. So for example, if you want rich multimedia, okay, then you probably need like a directory pointing to some assets and maybe you zip it up. 

Speaker 1 (31:13):
You can kind of do that and it's getting a bit sketchy, but then if you want real-time collaboration and backup and sync that classic flat file model starts to really struggle. I'm not saying it's totally impossible, but I think application developers have typically found it easier to just basically completely abandoned that and go to something that's more native to the real-time collaboration model. But my hope is that we can kind of go back and get some of those benefits of the old world. And one of the things that I'm really interested in with craft is they've tried to separate the sort of storage from the application layer. So you can use more standard storage approaches and still get at least some of the benefits that we've come to expect from modern apps. And I think that's the interesting avenue because it gives users some flexibility and some agency in terms of how they store and back up their data. 

Speaker 1 (32:00):
Yeah. And that is something we're trying to get. Right. But it is extremely hard because even supporting the evolution of one data structure right. Is challenging. And now with every change we make, we constantly have to look at, you know, all of the additional types of data structures we want to support. So right now, one of our biggest challenges is how do we extend mark down in order for it to be able to support hierarchic because in crafts you can have notes within notes or pages within pages and then mark down, that's not possible. And how do we do that when, you know, Mark Downs core premises, that it's very easy to read and write. So there are some trivial ways you could add syntax of HTML syntax and, you know, annotations, which could, you know, make this compatible at the same time would break the core principle or the core value of having a mark down, which you can just open up and you cannot really screw up. So that's the really good thing about RBM. There's no such thing as invalid syntax or, you know, it's going to not render. So I think all of these challenges are actually super exciting because it's really an interesting avenue where we're trying to, in some ways, reinvent the wheel, but at the same time, we're trying to reinvent it in a way where we bring it closer to where you said, how we could use this to then support the modern requirements of modern software. And it's a quite fun research project, actually, 

Speaker 2 (33:28):
Similar thing we've run into with muse bundle exports, which you get a dot muse file, but it's just a zip archive that you can open up. And we as much as possible try to use flat standard formats inside those PDF, all the annotations you put on it are stored in standard format, text cards or dot TXT files, images, or images recently, I think we switched over to using SVG for the ink. So that's kind of retrievable and even editable if you want. Uh, but yeah, exactly. To your point, there is metadata. That is part of what makes spews unique, which are these nested boards that there just isn't a multimedia board format standard. Maybe there should be, I don't know, maybe the melanocytes and mirros and muses for the world should get together a mixed standard format. But in the meantime, yeah, if you're innovating on the interface almost by definition, that means there's things that will be harder to impossible to represent in standard formats. Do you want to stick to that? But at the same time, you don't want it to hold back your ability to make what you think will be a great interface for your users. 

Speaker 1 (34:30):
Yeah. It's a very strong trade off. So you both want to move forward, but you just want to move forward enough. So you don't create incompatible issues at the longterm. So for a long time, we did not care a lot about will we break or will we lose features if we export to mark down, but especially with newer projects, like, you know, toggle lists or tables where losing data could mean losing meaning or reducing the value of the document? It is extremely challenging because we now, our main part of our research is actually what features can we add without breaking any export and ensuring that your data will be transferable? Because I don't like severely degraded exports because in some ways, then that means you are still locked in despite of the best intentions of the products. And it's very interesting of how our designers are now looking at data structures, which typically own the engineers, because for us, it did become a part of the design project of what data structures there are there, which we could reasonably well support and cooperate with. Maybe you 

Speaker 2 (35:45):
Could tell us about the storage aspect. So I think you can use iCloud or Dropbox. This ties very nicely to a lot of the work mark and I and other folks in ink and switch have done around this kind of local first and data ownership and that sort of thing. And it seems you've tried to set it up so that people can store their documents in a way that means they can access some without running the craft apps that say the data is a little bit independent of the software. Can you tell us a little bit about how that works? 

Speaker 1 (36:17):
Yeah, so I think the Inkin switch offline first piece was very influential for me because I was looking for what they call this approach. And that was it when I read and for us offline first really meant that you can always access and edit your data, but we wanted to make a really fluid experience when you use it on multi-device. So we ended up implementing our own sync protocol to ensure speed and conflict resolution and collaboration and so on. But of course this means you have to trust us in order to use graft and that shouldn't be required. I mean, you don't know much about us and really data ownership and who you trust should be your decision, and we shouldn't be forcing on. So for a long time, now we've been thinking of how could we do this, where you could use press, but you do not need to trust us to do that. 

Speaker 1 (37:13):
And obviously local option and iCloud storage is the simplest way to go at the same time. If you are a product which uses local storage, you are expected to satisfy certain number of check boxes, which is reasonable. You cannot do much with your data if you cannot access it. So adding it in for instance, a database might be okay. Yes, but it's very far from the intention of what actually people want when they say local software. And for now with we could come up with is essentially craft stores, texts as a database inside of our product. And what we did is we separated documents each with their metadata in adjacent format, which is hard to read by humans. It's easy to read by engineers, but engineers can easily access it. And you can also open it up with just a text editor and extract content a few later one. 

Speaker 1 (38:10):
Now over time, want this to become marked down the stay song, because that would be true power that, you know, Hey, I don't want to open Kraft today. I can just open this file where the Zillow studio code or whatever I want to do and add a few notes inside of that. So over time, I think our goal is for you not to require, to use craft, even if you want to participate or only use Kraft on your phone, because that's where you want to use it. And on your desktop, do something else. It's really about embedding. As we said at the start in your workflow and your workflow includes your preferences and really having that in the longterm of you accessing your data very easily. Us being able to inside of the app, store this as a database, meaning we can do very fast searching, very fast indexing, creating relations between them seems like a solution which could be best of both worlds. 

Speaker 1 (39:07):
And I think we are relatively new to try this in this domain because most companies strictly polarize in one direction. They either say, Hey, we are, you know, a primarily offline for step, which we are. We might do some iCloud, Sinbad collaboration and Shareen GaN, web sharing are very much out of question or they say, Hey, we are absolutely online only. And in order to use us, you have to trust us. And I understand the technical reasons of why it's really hard to do both. And we don't even have the same product in both. So we have this thing called offline spaces or external locations. So you cannot mix online data with offline data, which point to each other. So it's not a seamless experience, but our goal really was to give the users the choice of what they want to do. I mean, if you're starting a blog post, you, you might want to have it in an all nice, basic cause you want to have feedback on it in collaboration, but it's your story and credit card information. 

Speaker 1 (40:07):
I mean, I don't want you to put that inside of our database and you definitely do not want to do that. And then you can use whatever file system and whatever security your computer already provides to protect that data. And I think we tend to look at consumers from a product design perspective of we have to make a choice for them because they cannot. And I think a lot of people accept choices provided to them, but I also think there's a huge step up in terms of education of, I mean, apps used to be these $1 things, which you bought for a dollar, and then you use that for 10 years and it wasn't serious. Now apps with subscriptions, these are serious and people want to have more control over how their data is handled or they actually want to make the choice of how your data is handled and they can understand the consequences and make the right choice. I think, um, 

Speaker 2 (41:03):
When I think about the privacy piece of this, which mark and I have a whole podcast on, but I suspect we'll be talking about more in the future for me, I think for example, writing what will be a draft of blog posts it's intended for public consumption. I am going to share for feedback on the web or whatever pretty soon. And so it feels basically pretty reasonable for me to type that into an online place. There's obviously things that are more like, yeah, medical data or credit card stuff. And there you have very tight restrictions on what you can do, but a middle ground me is things that are more like you talked about thoughts and the degree to which your note taking tools or your writing tools are certainly muse, which is entirely intended to be a tool for thought that is a very kind of personal, intimate, private thing. 

Speaker 2 (41:46):
And it doesn't have this strict legal restriction of credit card numbers, but it's also not a blog post where it's eventually, or even just very soon going to be public. So it's middle ground. And maybe that's a place where that choice is relevant to a potential user. Now the business model side of it that opens a whole other topic, and this comes up a lot on the and switch communities and just talking about local for software. And what's possible if you remove this data ownership as kind of a source of sort of the monetization piece for many companies, then what does that leave you at? And I think that does come back to kind of the topic here, which is if you building a piece of software that you want to be a great tool, it's great at again, this interface, it offers you and manipulating the data rather than the company owning that data. 

Speaker 2 (42:38):
And you're willing to pay for that again, not a dollar, but I think Kraft is $45 us per year uses over double that this is a good chunk of change for anyone. These are serious tools we're asking you to pay for the tool itself and what it lets you do, rather than that, we've accumulated a database that you're paying for access to over time. So how do you feel this will work? You know, a lot of people have asked the question of us and maybe you get this as well. You know, will people pay a price like this for something that's more about the software rather than a database that you're running for them. And what do you think for maybe the industry in general, what's the viability for business models for local first or just interface focused software? 

Speaker 1 (43:26):
So I think we're in swings, right? You know, back in the days like 10, 15 years ago, we did pay for software and software only, and not for data storage and people used to buy hard drives at home and, you know, had their backups of backups and did that. And then we realized that, Hey, you know, we don't need to buy those hard drives. I can just use this all nice stuff. And insurance speed is fast enough. So I'm just going to do that. And now people are much more comfortable paying for services, data storage in all other areas. But I do feel a strong swing going backwards of after a couple of years, you know, first of all, people realize nothing is for free. So I think Google photos recently has been a big announcement in terms of it's no longer free, even Google cannot pay it. 

Speaker 1 (44:14):
So people are starting to realize if you don't pay your, the product and when you start to pay, actually I think you start to have a more complex evaluation system, right? I think news is going to have some level of online storage. So I don't need to care for certain names if I just want them to sync and be everywhere, you will be able to craft has this. So I think we're going to have to just as the iPad, right, is a blend between the iPhone and the map, and it's going in one regard to direction. So modern products should provide you with capabilities of what you expect from modern products, which could be data storage, which could be sharing and collaboration. And I think consumers do need that at the same time. I think these features are becoming now almost trivial in a sense like in five years, a new product won't exist without these. And because of that, I think a much bigger decision factor will be the interface and the user experience of the product because 10 years ago, real-time collaboration was something magical right now, not having it as almost like, you know, a point of I will not use the software. So that's the way I think of, I think in the longterm, the user interface, the functionality you provide is going to be a stronger differentiator factor and products are going to compete much more on this angle because free data storage cannot be free forever. Yeah. For 

Speaker 2 (45:46):
Some reason it seems easy for people to understand or intuitive, maybe that, oh, if you need to run servers and do some kind of data storage that has a cost. And so therefore paying that cost, you know, when I pay for a subscription for Dropbox, for example, while they're storing data for me. And so therefore that makes sense that that costs money and costs money on a recurring basis. Whereas a software interface, which maybe they see as a one and done, you write the software and you put it out and you don't need to think about it anymore. And so therefore it should be a fixed price or it should be a lower price or something like that. And my experience is the reverse of that. As you said, storage is becoming more and more commodity. I mean, running servers and keeping them online and having people carry pagers. 

Speaker 2 (46:28):
And that sort of thing for when stuff happens is definitely a cost, a substantial operational cost, but building great software, truly great software, especially if you're pushing the frontiers, whether it's in data, interoperability, the interface or anything else that is a very big ongoing cost. And so in order to make that sustainable folks need to be willing to pay. And I agree, we are starting to see that difference, but we're coming out of a long period of the expectation that sort of software is free, or the marginal cost is such that you shouldn't pay or you pay in other ways. And the monetization is around for example, data storage. 

Speaker 1 (47:06):
Yeah. And also, I think we do have a backslash as app engineers have, you know, a lot of users did experience them paying subscriptions for non online software just to not get real value in return of that product being abandoned. And I think because back in the days when you bought a hefty license, but every three, four years, they had be a significant update for you willing to buy something new. And I think that's another challenge. At least I see us facing as people, as you said, understand that data aspect and the server cost of that. But they also say, you know, I've seen so many subscriptions where for, you know, 12 months there hasn't been a single update. Why should I be paying the subscription for that? And in some ways that's also true. And because apple pushing so strongly towards the subscription model, I believe a lot of software, which frankly does not use subscriptions as they should in order to fund software development is also, you know, having, I think a negative impact on reputation of why software shouldn't be on a subscription base. 

Speaker 2 (48:16):
Yeah. That's a great point. Actually. We really interesting. So the first muse customers came online sort of last summer. So this summer we'll see the first sort of renewals come up. And of course, naturally you always have churned people who, for whatever reason are no longer getting value from the product. And then they choose not to continue paying, but that's a great opportunity to find out who are the people for whom they've paid a year ago. And they say, this is great. I want to continue. I feel like I've been exactly, as you said, getting continual value, not just what the software does today, but the improvements that are happening. And I think we've also seen that in a lot of folks, you know, sort of the free version, they come online, they try it, they like it, but think, is this really going to be worth this price and especially continuously, and then they can watch and see the ways that we're improving things and developing things. 

Speaker 2 (49:03):
And maybe after some months they say, yeah, I like this. I like the direction this is going. And I'd like to support it, but I totally agree. You've got to earn that it's building ongoing value and doing that in a way that's not just features for features sake, the old world of new version of Microsoft office to get everyone to upgrade. But actually, because you think that there is a very rich space for a great tool in where you are working and you can continue to understand what people are using it for and how it can be made better. 

Speaker 1 (49:32):
Yeah, totally. I also think there's an angle here of a subscription, potentially buying support community, a sense of belonging, even just a sense of being in the professional tier. The sense of, since I pay $10 a month, if I email this team, even though I've never done that so far, if I email this team are likely to respond, that's another area where I feel like some apps are charging subscriptions, even though they don't really provide that. Whereas something at muse, we really pride ourselves on is definitely if you are a customer, email us we'll reply basically right away. Yeah. There is the other area of expectation. Most users to expect you to answer them, even if they are not subscribers. And if they say, you know, they will never subscribe because it's too expensive for them, but they have this question and are super upset if you don't provide support. So I think we're in the global world and all of these are extremely interesting to see how they will. Yeah, this does remind me of the old Patrick McKenzie and his patio 11 on the Arnett Quip that there's kind of an inverse relationship between support demand and the price we charge. So as you charge more, you actually get more and more agreeable customers and inversely. If you have every fracking and a bunch of bads park west, well, 

Speaker 2 (50:39):
The business model also makes me think of what mark and I were just talking about in our last episode, which is this small giants concept, or at least the way we interpret it for our company, which is a middle path between kind of the go super big, heavy funding startup unicorn world, or the indie developer build something with one or two people. I think craft is kind of in this category, let's call it aspiring small, giant or middle path. I'd love to hear a little bit about your team and how you see that kind of like long-term sustainability for the business steady state. 

Speaker 1 (51:14):
Yeah. So it's a very interesting question because some people jump on this question of asking us VC money, good or bad, and obviously it's a lot more complex than that. So our goal is really to be able to provide value to relatively large number of users through keeping the principles we have. And the great thing about our world is especially technology in the last two years has become such a huge market in the sense of even if you're just 0.1 or 0.01% of the market, you can make a sizeable living. So I think last time I checked office 365 had like 40 to $50 billion of revenue. I mean, 1% of 1% is still four or $5 million, which is a very healthy, you know, small company paycheck. So I think our space and the good thing is that niches are powerful now because niches are big enough. 

Speaker 1 (52:09):
So if you only solve a smaller problem, but you solve that really well, you have a shot at that. Of course, it's going to be interesting of how many products people will be willing to pay for. And we'll we seeing now and un-bundling of, you know, specific niches and then another bonding where people come together. But from my perspective, I really feel that the core reason we started craft was we wanted to build a tool we are happy to use. And for us, I think that's going to continue for the longterm. As we're getting more feedback, we are getting more confident of what we could achieve. And my previous company was bootstrapped and it does hold you back. So we are considering potentially raising from VCs and, you know, going down the path of facilitating growth. So I think it's really about, can we keep our identity? Can we keep to our principles? And do we find partners who agree with these principles and believe that Google had this mantra of don't be evil and it worked well at then nowadays we don't see it much, but I think there's going to be a big Renaissance in this of people rediscovering that don't be, can be honest, you know, help the user. Instead of thinking in modes can become a very powerful business strategy. 

Speaker 2 (53:33):
It's a nice combination having principles and a strong point of view, being able and willing to serve a niche, which as you said, because the software, the world of software and internet is so big, a niche can actually be a very viable business thinking in terms of sustainability, connecting together your business model versus the kind of hand wave of like, I don't know, we'll figure out the money later, let's just grow and get users thing that maybe plague some technology companies in the past. And then the last one, I would say there is in thinking about taking investment, whether it's venture investment or angels or some other thing. I think it's also just thinking about the resources you need for the opportunity at hand. It sounds like that's exactly the thinking you are doing, which is, you know, if you're just two people with an idea, maybe that's not the right time to raise $5 million in venture money, even though it's kind of possible to do, if you have the right pitch deck, because there's so much investment money available there that may put you down the path of hiring a big team before you've even really figured out what your product is. 

Speaker 2 (54:34):
And then that creates all kinds of unbalances. Whereas if you've kept yourself lean with the smallest team and you've discovered that there's a real market opportunity and you see, we can add fuel on this fire with investment and go a little bigger, but also stay true to our principles. The point of going bigger is to do more interesting things and have a bigger impact in the world in a way that matters to why we're doing this business in the first place. Not just to be as big as possible, just because 

Speaker 1 (55:01):
Absolutely. Well, I think 

Speaker 2 (55:03):
That's a great place to wrap it. Thanks everyone for listening. If you have feedback, write us on Twitter at USAF HQ or via email [inaudible] app.com and help us out by leaving a review on apple podcasts and, and thanks so much for making the tool that I rely on for my writing, as well as inspiring us all for making an interface driven software company and one that is driven by principles and just wants to make the world a better place with great software. 

Speaker 3 (55:31):
Thank you for having me. [inaudible].

